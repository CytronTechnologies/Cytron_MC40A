Version 3.2 HI-TECH Software Intermediate Code
[v F1637 `(v ~T0 @X0 1 tf1`ul ]
"154 D:\Program Files\Microchip\xc8\v1.31\include\pic.h
[v __delay `JF1637 ~T0 @X0 0 e ]
[p i __delay ]
"26 lcd.h
[v _lcdWrite `(v ~T0 @X0 0 ef2`uc`uc ]
"3854 D:\Program Files\Microchip\xc8\v1.31\include\pic16f887.h
[v _RB6 `Vb ~T0 @X0 0 e@54 ]
"341
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"3914
[v _RE2 `Vb ~T0 @X0 0 e@74 ]
"4132
[v _TXEN `Vb ~T0 @X0 0 e@1221 ]
"4126
[v _TX9 `Vb ~T0 @X0 0 e@1222 ]
"3926
[v _RX9 `Vb ~T0 @X0 0 e@198 ]
"3664
[v _CREN `Vb ~T0 @X0 0 e@196 ]
"3946
[v _SPEN `Vb ~T0 @X0 0 e@199 ]
"3570
[v _BRGH `Vb ~T0 @X0 0 e@1218 ]
"2584
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"4136
[v _TXIF `Vb ~T0 @X0 0 e@100 ]
"1103
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"3774
[v _OERR `Vb ~T0 @X0 0 e@193 ]
"3890
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"1109
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"750
[v _T2CON `Vuc ~T0 @X0 0 e@18 ]
"1133
[v _CCP2CON `Vuc ~T0 @X0 0 e@29 ]
"1991
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"1121
[v _CCPR2L `Vuc ~T0 @X0 0 e@27 ]
"913
[v _CCP1CON `Vuc ~T0 @X0 0 e@23 ]
"901
[v _CCPR1L `Vuc ~T0 @X0 0 e@21 ]
[p mainexit ]
"30 main.c
[v _picInit `(v ~T0 @X0 0 ef ]
"31
[v _beep `(v ~T0 @X0 0 ef2`uc`ui ]
"3842 D:\Program Files\Microchip\xc8\v1.31\include\pic16f887.h
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
"3844
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
"3856
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
"3832
[v _RA3 `Vb ~T0 @X0 0 e@43 ]
"3834
[v _RA4 `Vb ~T0 @X0 0 e@44 ]
"3836
[v _RA5 `Vb ~T0 @X0 0 e@45 ]
"3910
[v _RE0 `Vb ~T0 @X0 0 e@72 ]
"3912
[v _RE1 `Vb ~T0 @X0 0 e@73 ]
"33 main.c
[v _motor `(v ~T0 @X0 0 ef2`c`c ]
"43 D:\Program Files\Microchip\xc8\v1.31\include\string.h
[v _memcmp `(i ~T0 @X0 0 ef3`*Cv`*Cv`ui ]
"3748 D:\Program Files\Microchip\xc8\v1.31\include\pic16f887.h
[v _IRCF2 `Vb ~T0 @X0 0 e@1150 ]
"3746
[v _IRCF1 `Vb ~T0 @X0 0 e@1149 ]
"3744
[v _IRCF0 `Vb ~T0 @X0 0 e@1148 ]
"3312
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"3373
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"158
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"219
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"280
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"402
[v _PORTE `Vuc ~T0 @X0 0 e@9 ]
"1377
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1438
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1499
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1560
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1621
[v _TRISE `Vuc ~T0 @X0 0 e@137 ]
"3850
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"3852
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
"3846
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"3848
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
[; ;htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;pic16f887.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 D:\Program Files\Microchip\xc8\v1.31\include\pic16f887.h
[; ;pic16f887.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f887.h: 53: extern volatile unsigned char TMR0 @ 0x001;
"55
[; ;pic16f887.h: 55: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f887.h: 59: extern volatile unsigned char PCL @ 0x002;
"61
[; ;pic16f887.h: 61: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f887.h: 65: extern volatile unsigned char STATUS @ 0x003;
"67
[; ;pic16f887.h: 67: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f887.h: 70: typedef union {
[; ;pic16f887.h: 71: struct {
[; ;pic16f887.h: 72: unsigned C :1;
[; ;pic16f887.h: 73: unsigned DC :1;
[; ;pic16f887.h: 74: unsigned Z :1;
[; ;pic16f887.h: 75: unsigned nPD :1;
[; ;pic16f887.h: 76: unsigned nTO :1;
[; ;pic16f887.h: 77: unsigned RP :2;
[; ;pic16f887.h: 78: unsigned IRP :1;
[; ;pic16f887.h: 79: };
[; ;pic16f887.h: 80: struct {
[; ;pic16f887.h: 81: unsigned :5;
[; ;pic16f887.h: 82: unsigned RP0 :1;
[; ;pic16f887.h: 83: unsigned RP1 :1;
[; ;pic16f887.h: 84: };
[; ;pic16f887.h: 85: struct {
[; ;pic16f887.h: 86: unsigned CARRY :1;
[; ;pic16f887.h: 87: };
[; ;pic16f887.h: 88: struct {
[; ;pic16f887.h: 89: unsigned :2;
[; ;pic16f887.h: 90: unsigned ZERO :1;
[; ;pic16f887.h: 91: };
[; ;pic16f887.h: 92: } STATUSbits_t;
[; ;pic16f887.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f887.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f887.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f887.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f887.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f887.h: 163: typedef union {
[; ;pic16f887.h: 164: struct {
[; ;pic16f887.h: 165: unsigned RA0 :1;
[; ;pic16f887.h: 166: unsigned RA1 :1;
[; ;pic16f887.h: 167: unsigned RA2 :1;
[; ;pic16f887.h: 168: unsigned RA3 :1;
[; ;pic16f887.h: 169: unsigned RA4 :1;
[; ;pic16f887.h: 170: unsigned RA5 :1;
[; ;pic16f887.h: 171: unsigned RA6 :1;
[; ;pic16f887.h: 172: unsigned RA7 :1;
[; ;pic16f887.h: 173: };
[; ;pic16f887.h: 174: } PORTAbits_t;
[; ;pic16f887.h: 175: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f887.h: 219: extern volatile unsigned char PORTB @ 0x006;
"221
[; ;pic16f887.h: 221: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f887.h: 224: typedef union {
[; ;pic16f887.h: 225: struct {
[; ;pic16f887.h: 226: unsigned RB0 :1;
[; ;pic16f887.h: 227: unsigned RB1 :1;
[; ;pic16f887.h: 228: unsigned RB2 :1;
[; ;pic16f887.h: 229: unsigned RB3 :1;
[; ;pic16f887.h: 230: unsigned RB4 :1;
[; ;pic16f887.h: 231: unsigned RB5 :1;
[; ;pic16f887.h: 232: unsigned RB6 :1;
[; ;pic16f887.h: 233: unsigned RB7 :1;
[; ;pic16f887.h: 234: };
[; ;pic16f887.h: 235: } PORTBbits_t;
[; ;pic16f887.h: 236: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f887.h: 280: extern volatile unsigned char PORTC @ 0x007;
"282
[; ;pic16f887.h: 282: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f887.h: 285: typedef union {
[; ;pic16f887.h: 286: struct {
[; ;pic16f887.h: 287: unsigned RC0 :1;
[; ;pic16f887.h: 288: unsigned RC1 :1;
[; ;pic16f887.h: 289: unsigned RC2 :1;
[; ;pic16f887.h: 290: unsigned RC3 :1;
[; ;pic16f887.h: 291: unsigned RC4 :1;
[; ;pic16f887.h: 292: unsigned RC5 :1;
[; ;pic16f887.h: 293: unsigned RC6 :1;
[; ;pic16f887.h: 294: unsigned RC7 :1;
[; ;pic16f887.h: 295: };
[; ;pic16f887.h: 296: } PORTCbits_t;
[; ;pic16f887.h: 297: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f887.h: 341: extern volatile unsigned char PORTD @ 0x008;
"343
[; ;pic16f887.h: 343: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f887.h: 346: typedef union {
[; ;pic16f887.h: 347: struct {
[; ;pic16f887.h: 348: unsigned RD0 :1;
[; ;pic16f887.h: 349: unsigned RD1 :1;
[; ;pic16f887.h: 350: unsigned RD2 :1;
[; ;pic16f887.h: 351: unsigned RD3 :1;
[; ;pic16f887.h: 352: unsigned RD4 :1;
[; ;pic16f887.h: 353: unsigned RD5 :1;
[; ;pic16f887.h: 354: unsigned RD6 :1;
[; ;pic16f887.h: 355: unsigned RD7 :1;
[; ;pic16f887.h: 356: };
[; ;pic16f887.h: 357: } PORTDbits_t;
[; ;pic16f887.h: 358: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f887.h: 402: extern volatile unsigned char PORTE @ 0x009;
"404
[; ;pic16f887.h: 404: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f887.h: 407: typedef union {
[; ;pic16f887.h: 408: struct {
[; ;pic16f887.h: 409: unsigned RE0 :1;
[; ;pic16f887.h: 410: unsigned RE1 :1;
[; ;pic16f887.h: 411: unsigned RE2 :1;
[; ;pic16f887.h: 412: unsigned RE3 :1;
[; ;pic16f887.h: 413: };
[; ;pic16f887.h: 414: } PORTEbits_t;
[; ;pic16f887.h: 415: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f887.h: 439: extern volatile unsigned char PCLATH @ 0x00A;
"441
[; ;pic16f887.h: 441: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f887.h: 445: extern volatile unsigned char INTCON @ 0x00B;
"447
[; ;pic16f887.h: 447: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f887.h: 450: typedef union {
[; ;pic16f887.h: 451: struct {
[; ;pic16f887.h: 452: unsigned RBIF :1;
[; ;pic16f887.h: 453: unsigned INTF :1;
[; ;pic16f887.h: 454: unsigned T0IF :1;
[; ;pic16f887.h: 455: unsigned RBIE :1;
[; ;pic16f887.h: 456: unsigned INTE :1;
[; ;pic16f887.h: 457: unsigned T0IE :1;
[; ;pic16f887.h: 458: unsigned PEIE :1;
[; ;pic16f887.h: 459: unsigned GIE :1;
[; ;pic16f887.h: 460: };
[; ;pic16f887.h: 461: struct {
[; ;pic16f887.h: 462: unsigned :2;
[; ;pic16f887.h: 463: unsigned TMR0IF :1;
[; ;pic16f887.h: 464: unsigned :2;
[; ;pic16f887.h: 465: unsigned TMR0IE :1;
[; ;pic16f887.h: 466: };
[; ;pic16f887.h: 467: } INTCONbits_t;
[; ;pic16f887.h: 468: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f887.h: 522: extern volatile unsigned char PIR1 @ 0x00C;
"524
[; ;pic16f887.h: 524: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f887.h: 527: typedef union {
[; ;pic16f887.h: 528: struct {
[; ;pic16f887.h: 529: unsigned TMR1IF :1;
[; ;pic16f887.h: 530: unsigned TMR2IF :1;
[; ;pic16f887.h: 531: unsigned CCP1IF :1;
[; ;pic16f887.h: 532: unsigned SSPIF :1;
[; ;pic16f887.h: 533: unsigned TXIF :1;
[; ;pic16f887.h: 534: unsigned RCIF :1;
[; ;pic16f887.h: 535: unsigned ADIF :1;
[; ;pic16f887.h: 536: };
[; ;pic16f887.h: 537: } PIR1bits_t;
[; ;pic16f887.h: 538: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f887.h: 577: extern volatile unsigned char PIR2 @ 0x00D;
"579
[; ;pic16f887.h: 579: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f887.h: 582: typedef union {
[; ;pic16f887.h: 583: struct {
[; ;pic16f887.h: 584: unsigned CCP2IF :1;
[; ;pic16f887.h: 585: unsigned :1;
[; ;pic16f887.h: 586: unsigned ULPWUIF :1;
[; ;pic16f887.h: 587: unsigned BCLIF :1;
[; ;pic16f887.h: 588: unsigned EEIF :1;
[; ;pic16f887.h: 589: unsigned C1IF :1;
[; ;pic16f887.h: 590: unsigned C2IF :1;
[; ;pic16f887.h: 591: unsigned OSFIF :1;
[; ;pic16f887.h: 592: };
[; ;pic16f887.h: 593: } PIR2bits_t;
[; ;pic16f887.h: 594: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f887.h: 633: extern volatile unsigned short TMR1 @ 0x00E;
"635
[; ;pic16f887.h: 635: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f887.h: 639: extern volatile unsigned char TMR1L @ 0x00E;
"641
[; ;pic16f887.h: 641: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f887.h: 645: extern volatile unsigned char TMR1H @ 0x00F;
"647
[; ;pic16f887.h: 647: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f887.h: 651: extern volatile unsigned char T1CON @ 0x010;
"653
[; ;pic16f887.h: 653: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f887.h: 656: typedef union {
[; ;pic16f887.h: 657: struct {
[; ;pic16f887.h: 658: unsigned TMR1ON :1;
[; ;pic16f887.h: 659: unsigned TMR1CS :1;
[; ;pic16f887.h: 660: unsigned nT1SYNC :1;
[; ;pic16f887.h: 661: unsigned T1OSCEN :1;
[; ;pic16f887.h: 662: unsigned T1CKPS :2;
[; ;pic16f887.h: 663: unsigned TMR1GE :1;
[; ;pic16f887.h: 664: unsigned T1GINV :1;
[; ;pic16f887.h: 665: };
[; ;pic16f887.h: 666: struct {
[; ;pic16f887.h: 667: unsigned :2;
[; ;pic16f887.h: 668: unsigned T1INSYNC :1;
[; ;pic16f887.h: 669: unsigned :1;
[; ;pic16f887.h: 670: unsigned T1CKPS0 :1;
[; ;pic16f887.h: 671: unsigned T1CKPS1 :1;
[; ;pic16f887.h: 672: unsigned :1;
[; ;pic16f887.h: 673: unsigned T1GIV :1;
[; ;pic16f887.h: 674: };
[; ;pic16f887.h: 675: struct {
[; ;pic16f887.h: 676: unsigned :2;
[; ;pic16f887.h: 677: unsigned T1SYNC :1;
[; ;pic16f887.h: 678: };
[; ;pic16f887.h: 679: } T1CONbits_t;
[; ;pic16f887.h: 680: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f887.h: 744: extern volatile unsigned char TMR2 @ 0x011;
"746
[; ;pic16f887.h: 746: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f887.h: 750: extern volatile unsigned char T2CON @ 0x012;
"752
[; ;pic16f887.h: 752: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f887.h: 755: typedef union {
[; ;pic16f887.h: 756: struct {
[; ;pic16f887.h: 757: unsigned T2CKPS :2;
[; ;pic16f887.h: 758: unsigned TMR2ON :1;
[; ;pic16f887.h: 759: unsigned TOUTPS :4;
[; ;pic16f887.h: 760: };
[; ;pic16f887.h: 761: struct {
[; ;pic16f887.h: 762: unsigned T2CKPS0 :1;
[; ;pic16f887.h: 763: unsigned T2CKPS1 :1;
[; ;pic16f887.h: 764: unsigned :1;
[; ;pic16f887.h: 765: unsigned TOUTPS0 :1;
[; ;pic16f887.h: 766: unsigned TOUTPS1 :1;
[; ;pic16f887.h: 767: unsigned TOUTPS2 :1;
[; ;pic16f887.h: 768: unsigned TOUTPS3 :1;
[; ;pic16f887.h: 769: };
[; ;pic16f887.h: 770: } T2CONbits_t;
[; ;pic16f887.h: 771: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f887.h: 820: extern volatile unsigned char SSPBUF @ 0x013;
"822
[; ;pic16f887.h: 822: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f887.h: 826: extern volatile unsigned char SSPCON @ 0x014;
"828
[; ;pic16f887.h: 828: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f887.h: 831: typedef union {
[; ;pic16f887.h: 832: struct {
[; ;pic16f887.h: 833: unsigned SSPM :4;
[; ;pic16f887.h: 834: unsigned CKP :1;
[; ;pic16f887.h: 835: unsigned SSPEN :1;
[; ;pic16f887.h: 836: unsigned SSPOV :1;
[; ;pic16f887.h: 837: unsigned WCOL :1;
[; ;pic16f887.h: 838: };
[; ;pic16f887.h: 839: struct {
[; ;pic16f887.h: 840: unsigned SSPM0 :1;
[; ;pic16f887.h: 841: unsigned SSPM1 :1;
[; ;pic16f887.h: 842: unsigned SSPM2 :1;
[; ;pic16f887.h: 843: unsigned SSPM3 :1;
[; ;pic16f887.h: 844: };
[; ;pic16f887.h: 845: } SSPCONbits_t;
[; ;pic16f887.h: 846: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f887.h: 895: extern volatile unsigned short CCPR1 @ 0x015;
"897
[; ;pic16f887.h: 897: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f887.h: 901: extern volatile unsigned char CCPR1L @ 0x015;
"903
[; ;pic16f887.h: 903: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f887.h: 907: extern volatile unsigned char CCPR1H @ 0x016;
"909
[; ;pic16f887.h: 909: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f887.h: 913: extern volatile unsigned char CCP1CON @ 0x017;
"915
[; ;pic16f887.h: 915: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f887.h: 918: typedef union {
[; ;pic16f887.h: 919: struct {
[; ;pic16f887.h: 920: unsigned CCP1M :4;
[; ;pic16f887.h: 921: unsigned DC1B :2;
[; ;pic16f887.h: 922: unsigned P1M :2;
[; ;pic16f887.h: 923: };
[; ;pic16f887.h: 924: struct {
[; ;pic16f887.h: 925: unsigned CCP1M0 :1;
[; ;pic16f887.h: 926: unsigned CCP1M1 :1;
[; ;pic16f887.h: 927: unsigned CCP1M2 :1;
[; ;pic16f887.h: 928: unsigned CCP1M3 :1;
[; ;pic16f887.h: 929: unsigned DC1B0 :1;
[; ;pic16f887.h: 930: unsigned DC1B1 :1;
[; ;pic16f887.h: 931: unsigned P1M0 :1;
[; ;pic16f887.h: 932: unsigned P1M1 :1;
[; ;pic16f887.h: 933: };
[; ;pic16f887.h: 934: struct {
[; ;pic16f887.h: 935: unsigned :4;
[; ;pic16f887.h: 936: unsigned CCP1Y :1;
[; ;pic16f887.h: 937: unsigned CCP1X :1;
[; ;pic16f887.h: 938: };
[; ;pic16f887.h: 939: } CCP1CONbits_t;
[; ;pic16f887.h: 940: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f887.h: 1009: extern volatile unsigned char RCSTA @ 0x018;
"1011
[; ;pic16f887.h: 1011: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f887.h: 1014: typedef union {
[; ;pic16f887.h: 1015: struct {
[; ;pic16f887.h: 1016: unsigned RX9D :1;
[; ;pic16f887.h: 1017: unsigned OERR :1;
[; ;pic16f887.h: 1018: unsigned FERR :1;
[; ;pic16f887.h: 1019: unsigned ADDEN :1;
[; ;pic16f887.h: 1020: unsigned CREN :1;
[; ;pic16f887.h: 1021: unsigned SREN :1;
[; ;pic16f887.h: 1022: unsigned RX9 :1;
[; ;pic16f887.h: 1023: unsigned SPEN :1;
[; ;pic16f887.h: 1024: };
[; ;pic16f887.h: 1025: struct {
[; ;pic16f887.h: 1026: unsigned RCD8 :1;
[; ;pic16f887.h: 1027: unsigned :5;
[; ;pic16f887.h: 1028: unsigned RC9 :1;
[; ;pic16f887.h: 1029: };
[; ;pic16f887.h: 1030: struct {
[; ;pic16f887.h: 1031: unsigned :6;
[; ;pic16f887.h: 1032: unsigned nRC8 :1;
[; ;pic16f887.h: 1033: };
[; ;pic16f887.h: 1034: struct {
[; ;pic16f887.h: 1035: unsigned :6;
[; ;pic16f887.h: 1036: unsigned RC8_9 :1;
[; ;pic16f887.h: 1037: };
[; ;pic16f887.h: 1038: } RCSTAbits_t;
[; ;pic16f887.h: 1039: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f887.h: 1103: extern volatile unsigned char TXREG @ 0x019;
"1105
[; ;pic16f887.h: 1105: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f887.h: 1109: extern volatile unsigned char RCREG @ 0x01A;
"1111
[; ;pic16f887.h: 1111: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f887.h: 1115: extern volatile unsigned short CCPR2 @ 0x01B;
"1117
[; ;pic16f887.h: 1117: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f887.h: 1121: extern volatile unsigned char CCPR2L @ 0x01B;
"1123
[; ;pic16f887.h: 1123: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f887.h: 1127: extern volatile unsigned char CCPR2H @ 0x01C;
"1129
[; ;pic16f887.h: 1129: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f887.h: 1133: extern volatile unsigned char CCP2CON @ 0x01D;
"1135
[; ;pic16f887.h: 1135: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f887.h: 1138: typedef union {
[; ;pic16f887.h: 1139: struct {
[; ;pic16f887.h: 1140: unsigned CCP2M :4;
[; ;pic16f887.h: 1141: unsigned DC2B0 :1;
[; ;pic16f887.h: 1142: unsigned DC2B1 :1;
[; ;pic16f887.h: 1143: };
[; ;pic16f887.h: 1144: struct {
[; ;pic16f887.h: 1145: unsigned CCP2M0 :1;
[; ;pic16f887.h: 1146: unsigned CCP2M1 :1;
[; ;pic16f887.h: 1147: unsigned CCP2M2 :1;
[; ;pic16f887.h: 1148: unsigned CCP2M3 :1;
[; ;pic16f887.h: 1149: unsigned CCP2Y :1;
[; ;pic16f887.h: 1150: unsigned CCP2X :1;
[; ;pic16f887.h: 1151: };
[; ;pic16f887.h: 1152: } CCP2CONbits_t;
[; ;pic16f887.h: 1153: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f887.h: 1202: extern volatile unsigned char ADRESH @ 0x01E;
"1204
[; ;pic16f887.h: 1204: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f887.h: 1208: extern volatile unsigned char ADCON0 @ 0x01F;
"1210
[; ;pic16f887.h: 1210: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f887.h: 1213: typedef union {
[; ;pic16f887.h: 1214: struct {
[; ;pic16f887.h: 1215: unsigned ADON :1;
[; ;pic16f887.h: 1216: unsigned GO_nDONE :1;
[; ;pic16f887.h: 1217: unsigned CHS :4;
[; ;pic16f887.h: 1218: unsigned ADCS :2;
[; ;pic16f887.h: 1219: };
[; ;pic16f887.h: 1220: struct {
[; ;pic16f887.h: 1221: unsigned :1;
[; ;pic16f887.h: 1222: unsigned GO :1;
[; ;pic16f887.h: 1223: unsigned CHS0 :1;
[; ;pic16f887.h: 1224: unsigned CHS1 :1;
[; ;pic16f887.h: 1225: unsigned CHS2 :1;
[; ;pic16f887.h: 1226: unsigned CHS3 :1;
[; ;pic16f887.h: 1227: unsigned ADCS0 :1;
[; ;pic16f887.h: 1228: unsigned ADCS1 :1;
[; ;pic16f887.h: 1229: };
[; ;pic16f887.h: 1230: struct {
[; ;pic16f887.h: 1231: unsigned :1;
[; ;pic16f887.h: 1232: unsigned nDONE :1;
[; ;pic16f887.h: 1233: };
[; ;pic16f887.h: 1234: struct {
[; ;pic16f887.h: 1235: unsigned :1;
[; ;pic16f887.h: 1236: unsigned GO_DONE :1;
[; ;pic16f887.h: 1237: };
[; ;pic16f887.h: 1238: } ADCON0bits_t;
[; ;pic16f887.h: 1239: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f887.h: 1308: extern volatile unsigned char OPTION_REG @ 0x081;
"1310
[; ;pic16f887.h: 1310: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f887.h: 1313: typedef union {
[; ;pic16f887.h: 1314: struct {
[; ;pic16f887.h: 1315: unsigned PS :3;
[; ;pic16f887.h: 1316: unsigned PSA :1;
[; ;pic16f887.h: 1317: unsigned T0SE :1;
[; ;pic16f887.h: 1318: unsigned T0CS :1;
[; ;pic16f887.h: 1319: unsigned INTEDG :1;
[; ;pic16f887.h: 1320: unsigned nRBPU :1;
[; ;pic16f887.h: 1321: };
[; ;pic16f887.h: 1322: struct {
[; ;pic16f887.h: 1323: unsigned PS0 :1;
[; ;pic16f887.h: 1324: unsigned PS1 :1;
[; ;pic16f887.h: 1325: unsigned PS2 :1;
[; ;pic16f887.h: 1326: };
[; ;pic16f887.h: 1327: } OPTION_REGbits_t;
[; ;pic16f887.h: 1328: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f887.h: 1377: extern volatile unsigned char TRISA @ 0x085;
"1379
[; ;pic16f887.h: 1379: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f887.h: 1382: typedef union {
[; ;pic16f887.h: 1383: struct {
[; ;pic16f887.h: 1384: unsigned TRISA0 :1;
[; ;pic16f887.h: 1385: unsigned TRISA1 :1;
[; ;pic16f887.h: 1386: unsigned TRISA2 :1;
[; ;pic16f887.h: 1387: unsigned TRISA3 :1;
[; ;pic16f887.h: 1388: unsigned TRISA4 :1;
[; ;pic16f887.h: 1389: unsigned TRISA5 :1;
[; ;pic16f887.h: 1390: unsigned TRISA6 :1;
[; ;pic16f887.h: 1391: unsigned TRISA7 :1;
[; ;pic16f887.h: 1392: };
[; ;pic16f887.h: 1393: } TRISAbits_t;
[; ;pic16f887.h: 1394: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f887.h: 1438: extern volatile unsigned char TRISB @ 0x086;
"1440
[; ;pic16f887.h: 1440: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f887.h: 1443: typedef union {
[; ;pic16f887.h: 1444: struct {
[; ;pic16f887.h: 1445: unsigned TRISB0 :1;
[; ;pic16f887.h: 1446: unsigned TRISB1 :1;
[; ;pic16f887.h: 1447: unsigned TRISB2 :1;
[; ;pic16f887.h: 1448: unsigned TRISB3 :1;
[; ;pic16f887.h: 1449: unsigned TRISB4 :1;
[; ;pic16f887.h: 1450: unsigned TRISB5 :1;
[; ;pic16f887.h: 1451: unsigned TRISB6 :1;
[; ;pic16f887.h: 1452: unsigned TRISB7 :1;
[; ;pic16f887.h: 1453: };
[; ;pic16f887.h: 1454: } TRISBbits_t;
[; ;pic16f887.h: 1455: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f887.h: 1499: extern volatile unsigned char TRISC @ 0x087;
"1501
[; ;pic16f887.h: 1501: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f887.h: 1504: typedef union {
[; ;pic16f887.h: 1505: struct {
[; ;pic16f887.h: 1506: unsigned TRISC0 :1;
[; ;pic16f887.h: 1507: unsigned TRISC1 :1;
[; ;pic16f887.h: 1508: unsigned TRISC2 :1;
[; ;pic16f887.h: 1509: unsigned TRISC3 :1;
[; ;pic16f887.h: 1510: unsigned TRISC4 :1;
[; ;pic16f887.h: 1511: unsigned TRISC5 :1;
[; ;pic16f887.h: 1512: unsigned TRISC6 :1;
[; ;pic16f887.h: 1513: unsigned TRISC7 :1;
[; ;pic16f887.h: 1514: };
[; ;pic16f887.h: 1515: } TRISCbits_t;
[; ;pic16f887.h: 1516: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f887.h: 1560: extern volatile unsigned char TRISD @ 0x088;
"1562
[; ;pic16f887.h: 1562: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f887.h: 1565: typedef union {
[; ;pic16f887.h: 1566: struct {
[; ;pic16f887.h: 1567: unsigned TRISD0 :1;
[; ;pic16f887.h: 1568: unsigned TRISD1 :1;
[; ;pic16f887.h: 1569: unsigned TRISD2 :1;
[; ;pic16f887.h: 1570: unsigned TRISD3 :1;
[; ;pic16f887.h: 1571: unsigned TRISD4 :1;
[; ;pic16f887.h: 1572: unsigned TRISD5 :1;
[; ;pic16f887.h: 1573: unsigned TRISD6 :1;
[; ;pic16f887.h: 1574: unsigned TRISD7 :1;
[; ;pic16f887.h: 1575: };
[; ;pic16f887.h: 1576: } TRISDbits_t;
[; ;pic16f887.h: 1577: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f887.h: 1621: extern volatile unsigned char TRISE @ 0x089;
"1623
[; ;pic16f887.h: 1623: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f887.h: 1626: typedef union {
[; ;pic16f887.h: 1627: struct {
[; ;pic16f887.h: 1628: unsigned TRISE0 :1;
[; ;pic16f887.h: 1629: unsigned TRISE1 :1;
[; ;pic16f887.h: 1630: unsigned TRISE2 :1;
[; ;pic16f887.h: 1631: unsigned TRISE3 :1;
[; ;pic16f887.h: 1632: };
[; ;pic16f887.h: 1633: } TRISEbits_t;
[; ;pic16f887.h: 1634: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f887.h: 1658: extern volatile unsigned char PIE1 @ 0x08C;
"1660
[; ;pic16f887.h: 1660: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f887.h: 1663: typedef union {
[; ;pic16f887.h: 1664: struct {
[; ;pic16f887.h: 1665: unsigned TMR1IE :1;
[; ;pic16f887.h: 1666: unsigned TMR2IE :1;
[; ;pic16f887.h: 1667: unsigned CCP1IE :1;
[; ;pic16f887.h: 1668: unsigned SSPIE :1;
[; ;pic16f887.h: 1669: unsigned TXIE :1;
[; ;pic16f887.h: 1670: unsigned RCIE :1;
[; ;pic16f887.h: 1671: unsigned ADIE :1;
[; ;pic16f887.h: 1672: };
[; ;pic16f887.h: 1673: } PIE1bits_t;
[; ;pic16f887.h: 1674: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f887.h: 1713: extern volatile unsigned char PIE2 @ 0x08D;
"1715
[; ;pic16f887.h: 1715: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f887.h: 1718: typedef union {
[; ;pic16f887.h: 1719: struct {
[; ;pic16f887.h: 1720: unsigned CCP2IE :1;
[; ;pic16f887.h: 1721: unsigned :1;
[; ;pic16f887.h: 1722: unsigned ULPWUIE :1;
[; ;pic16f887.h: 1723: unsigned BCLIE :1;
[; ;pic16f887.h: 1724: unsigned EEIE :1;
[; ;pic16f887.h: 1725: unsigned C1IE :1;
[; ;pic16f887.h: 1726: unsigned C2IE :1;
[; ;pic16f887.h: 1727: unsigned OSFIE :1;
[; ;pic16f887.h: 1728: };
[; ;pic16f887.h: 1729: } PIE2bits_t;
[; ;pic16f887.h: 1730: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f887.h: 1769: extern volatile unsigned char PCON @ 0x08E;
"1771
[; ;pic16f887.h: 1771: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f887.h: 1774: typedef union {
[; ;pic16f887.h: 1775: struct {
[; ;pic16f887.h: 1776: unsigned nBOR :1;
[; ;pic16f887.h: 1777: unsigned nPOR :1;
[; ;pic16f887.h: 1778: unsigned :2;
[; ;pic16f887.h: 1779: unsigned SBOREN :1;
[; ;pic16f887.h: 1780: unsigned ULPWUE :1;
[; ;pic16f887.h: 1781: };
[; ;pic16f887.h: 1782: struct {
[; ;pic16f887.h: 1783: unsigned nBO :1;
[; ;pic16f887.h: 1784: };
[; ;pic16f887.h: 1785: } PCONbits_t;
[; ;pic16f887.h: 1786: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f887.h: 1815: extern volatile unsigned char OSCCON @ 0x08F;
"1817
[; ;pic16f887.h: 1817: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f887.h: 1820: typedef union {
[; ;pic16f887.h: 1821: struct {
[; ;pic16f887.h: 1822: unsigned SCS :1;
[; ;pic16f887.h: 1823: unsigned LTS :1;
[; ;pic16f887.h: 1824: unsigned HTS :1;
[; ;pic16f887.h: 1825: unsigned OSTS :1;
[; ;pic16f887.h: 1826: unsigned IRCF :3;
[; ;pic16f887.h: 1827: };
[; ;pic16f887.h: 1828: struct {
[; ;pic16f887.h: 1829: unsigned :4;
[; ;pic16f887.h: 1830: unsigned IRCF0 :1;
[; ;pic16f887.h: 1831: unsigned IRCF1 :1;
[; ;pic16f887.h: 1832: unsigned IRCF2 :1;
[; ;pic16f887.h: 1833: };
[; ;pic16f887.h: 1834: } OSCCONbits_t;
[; ;pic16f887.h: 1835: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f887.h: 1879: extern volatile unsigned char OSCTUNE @ 0x090;
"1881
[; ;pic16f887.h: 1881: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f887.h: 1884: typedef union {
[; ;pic16f887.h: 1885: struct {
[; ;pic16f887.h: 1886: unsigned TUN :5;
[; ;pic16f887.h: 1887: };
[; ;pic16f887.h: 1888: struct {
[; ;pic16f887.h: 1889: unsigned TUN0 :1;
[; ;pic16f887.h: 1890: unsigned TUN1 :1;
[; ;pic16f887.h: 1891: unsigned TUN2 :1;
[; ;pic16f887.h: 1892: unsigned TUN3 :1;
[; ;pic16f887.h: 1893: unsigned TUN4 :1;
[; ;pic16f887.h: 1894: };
[; ;pic16f887.h: 1895: } OSCTUNEbits_t;
[; ;pic16f887.h: 1896: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f887.h: 1930: extern volatile unsigned char SSPCON2 @ 0x091;
"1932
[; ;pic16f887.h: 1932: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f887.h: 1935: typedef union {
[; ;pic16f887.h: 1936: struct {
[; ;pic16f887.h: 1937: unsigned SEN :1;
[; ;pic16f887.h: 1938: unsigned RSEN :1;
[; ;pic16f887.h: 1939: unsigned PEN :1;
[; ;pic16f887.h: 1940: unsigned RCEN :1;
[; ;pic16f887.h: 1941: unsigned ACKEN :1;
[; ;pic16f887.h: 1942: unsigned ACKDT :1;
[; ;pic16f887.h: 1943: unsigned ACKSTAT :1;
[; ;pic16f887.h: 1944: unsigned GCEN :1;
[; ;pic16f887.h: 1945: };
[; ;pic16f887.h: 1946: } SSPCON2bits_t;
[; ;pic16f887.h: 1947: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f887.h: 1991: extern volatile unsigned char PR2 @ 0x092;
"1993
[; ;pic16f887.h: 1993: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f887.h: 1997: extern volatile unsigned char SSPADD @ 0x093;
"1999
[; ;pic16f887.h: 1999: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f887.h: 2003: extern volatile unsigned char SSPMSK @ 0x093;
"2005
[; ;pic16f887.h: 2005: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f887.h: 2008: extern volatile unsigned char MSK @ 0x093;
"2010
[; ;pic16f887.h: 2010: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f887.h: 2013: typedef union {
[; ;pic16f887.h: 2014: struct {
[; ;pic16f887.h: 2015: unsigned MSK0 :1;
[; ;pic16f887.h: 2016: unsigned MSK1 :1;
[; ;pic16f887.h: 2017: unsigned MSK2 :1;
[; ;pic16f887.h: 2018: unsigned MSK3 :1;
[; ;pic16f887.h: 2019: unsigned MSK4 :1;
[; ;pic16f887.h: 2020: unsigned MSK5 :1;
[; ;pic16f887.h: 2021: unsigned MSK6 :1;
[; ;pic16f887.h: 2022: unsigned MSK7 :1;
[; ;pic16f887.h: 2023: };
[; ;pic16f887.h: 2024: } SSPMSKbits_t;
[; ;pic16f887.h: 2025: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f887.h: 2068: typedef union {
[; ;pic16f887.h: 2069: struct {
[; ;pic16f887.h: 2070: unsigned MSK0 :1;
[; ;pic16f887.h: 2071: unsigned MSK1 :1;
[; ;pic16f887.h: 2072: unsigned MSK2 :1;
[; ;pic16f887.h: 2073: unsigned MSK3 :1;
[; ;pic16f887.h: 2074: unsigned MSK4 :1;
[; ;pic16f887.h: 2075: unsigned MSK5 :1;
[; ;pic16f887.h: 2076: unsigned MSK6 :1;
[; ;pic16f887.h: 2077: unsigned MSK7 :1;
[; ;pic16f887.h: 2078: };
[; ;pic16f887.h: 2079: } MSKbits_t;
[; ;pic16f887.h: 2080: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f887.h: 2124: extern volatile unsigned char SSPSTAT @ 0x094;
"2126
[; ;pic16f887.h: 2126: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f887.h: 2129: typedef union {
[; ;pic16f887.h: 2130: struct {
[; ;pic16f887.h: 2131: unsigned BF :1;
[; ;pic16f887.h: 2132: unsigned UA :1;
[; ;pic16f887.h: 2133: unsigned R_nW :1;
[; ;pic16f887.h: 2134: unsigned S :1;
[; ;pic16f887.h: 2135: unsigned P :1;
[; ;pic16f887.h: 2136: unsigned D_nA :1;
[; ;pic16f887.h: 2137: unsigned CKE :1;
[; ;pic16f887.h: 2138: unsigned SMP :1;
[; ;pic16f887.h: 2139: };
[; ;pic16f887.h: 2140: struct {
[; ;pic16f887.h: 2141: unsigned :2;
[; ;pic16f887.h: 2142: unsigned R :1;
[; ;pic16f887.h: 2143: unsigned :2;
[; ;pic16f887.h: 2144: unsigned D :1;
[; ;pic16f887.h: 2145: };
[; ;pic16f887.h: 2146: struct {
[; ;pic16f887.h: 2147: unsigned :2;
[; ;pic16f887.h: 2148: unsigned I2C_READ :1;
[; ;pic16f887.h: 2149: unsigned I2C_START :1;
[; ;pic16f887.h: 2150: unsigned I2C_STOP :1;
[; ;pic16f887.h: 2151: unsigned I2C_DATA :1;
[; ;pic16f887.h: 2152: };
[; ;pic16f887.h: 2153: struct {
[; ;pic16f887.h: 2154: unsigned :2;
[; ;pic16f887.h: 2155: unsigned nW :1;
[; ;pic16f887.h: 2156: unsigned :2;
[; ;pic16f887.h: 2157: unsigned nA :1;
[; ;pic16f887.h: 2158: };
[; ;pic16f887.h: 2159: struct {
[; ;pic16f887.h: 2160: unsigned :2;
[; ;pic16f887.h: 2161: unsigned nWRITE :1;
[; ;pic16f887.h: 2162: unsigned :2;
[; ;pic16f887.h: 2163: unsigned nADDRESS :1;
[; ;pic16f887.h: 2164: };
[; ;pic16f887.h: 2165: struct {
[; ;pic16f887.h: 2166: unsigned :2;
[; ;pic16f887.h: 2167: unsigned R_W :1;
[; ;pic16f887.h: 2168: unsigned :2;
[; ;pic16f887.h: 2169: unsigned D_A :1;
[; ;pic16f887.h: 2170: };
[; ;pic16f887.h: 2171: struct {
[; ;pic16f887.h: 2172: unsigned :2;
[; ;pic16f887.h: 2173: unsigned READ_WRITE :1;
[; ;pic16f887.h: 2174: unsigned :2;
[; ;pic16f887.h: 2175: unsigned DATA_ADDRESS :1;
[; ;pic16f887.h: 2176: };
[; ;pic16f887.h: 2177: } SSPSTATbits_t;
[; ;pic16f887.h: 2178: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f887.h: 2292: extern volatile unsigned char WPUB @ 0x095;
"2294
[; ;pic16f887.h: 2294: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f887.h: 2297: typedef union {
[; ;pic16f887.h: 2298: struct {
[; ;pic16f887.h: 2299: unsigned WPUB :8;
[; ;pic16f887.h: 2300: };
[; ;pic16f887.h: 2301: struct {
[; ;pic16f887.h: 2302: unsigned WPUB0 :1;
[; ;pic16f887.h: 2303: unsigned WPUB1 :1;
[; ;pic16f887.h: 2304: unsigned WPUB2 :1;
[; ;pic16f887.h: 2305: unsigned WPUB3 :1;
[; ;pic16f887.h: 2306: unsigned WPUB4 :1;
[; ;pic16f887.h: 2307: unsigned WPUB5 :1;
[; ;pic16f887.h: 2308: unsigned WPUB6 :1;
[; ;pic16f887.h: 2309: unsigned WPUB7 :1;
[; ;pic16f887.h: 2310: };
[; ;pic16f887.h: 2311: } WPUBbits_t;
[; ;pic16f887.h: 2312: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f887.h: 2361: extern volatile unsigned char IOCB @ 0x096;
"2363
[; ;pic16f887.h: 2363: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f887.h: 2366: typedef union {
[; ;pic16f887.h: 2367: struct {
[; ;pic16f887.h: 2368: unsigned IOCB :8;
[; ;pic16f887.h: 2369: };
[; ;pic16f887.h: 2370: struct {
[; ;pic16f887.h: 2371: unsigned IOCB0 :1;
[; ;pic16f887.h: 2372: unsigned IOCB1 :1;
[; ;pic16f887.h: 2373: unsigned IOCB2 :1;
[; ;pic16f887.h: 2374: unsigned IOCB3 :1;
[; ;pic16f887.h: 2375: unsigned IOCB4 :1;
[; ;pic16f887.h: 2376: unsigned IOCB5 :1;
[; ;pic16f887.h: 2377: unsigned IOCB6 :1;
[; ;pic16f887.h: 2378: unsigned IOCB7 :1;
[; ;pic16f887.h: 2379: };
[; ;pic16f887.h: 2380: } IOCBbits_t;
[; ;pic16f887.h: 2381: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f887.h: 2430: extern volatile unsigned char VRCON @ 0x097;
"2432
[; ;pic16f887.h: 2432: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f887.h: 2435: typedef union {
[; ;pic16f887.h: 2436: struct {
[; ;pic16f887.h: 2437: unsigned VR :4;
[; ;pic16f887.h: 2438: unsigned VRSS :1;
[; ;pic16f887.h: 2439: unsigned VRR :1;
[; ;pic16f887.h: 2440: unsigned VROE :1;
[; ;pic16f887.h: 2441: unsigned VREN :1;
[; ;pic16f887.h: 2442: };
[; ;pic16f887.h: 2443: struct {
[; ;pic16f887.h: 2444: unsigned VR0 :1;
[; ;pic16f887.h: 2445: unsigned VR1 :1;
[; ;pic16f887.h: 2446: unsigned VR2 :1;
[; ;pic16f887.h: 2447: unsigned VR3 :1;
[; ;pic16f887.h: 2448: };
[; ;pic16f887.h: 2449: } VRCONbits_t;
[; ;pic16f887.h: 2450: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f887.h: 2499: extern volatile unsigned char TXSTA @ 0x098;
"2501
[; ;pic16f887.h: 2501: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f887.h: 2504: typedef union {
[; ;pic16f887.h: 2505: struct {
[; ;pic16f887.h: 2506: unsigned TX9D :1;
[; ;pic16f887.h: 2507: unsigned TRMT :1;
[; ;pic16f887.h: 2508: unsigned BRGH :1;
[; ;pic16f887.h: 2509: unsigned SENDB :1;
[; ;pic16f887.h: 2510: unsigned SYNC :1;
[; ;pic16f887.h: 2511: unsigned TXEN :1;
[; ;pic16f887.h: 2512: unsigned TX9 :1;
[; ;pic16f887.h: 2513: unsigned CSRC :1;
[; ;pic16f887.h: 2514: };
[; ;pic16f887.h: 2515: struct {
[; ;pic16f887.h: 2516: unsigned TXD8 :1;
[; ;pic16f887.h: 2517: unsigned :5;
[; ;pic16f887.h: 2518: unsigned nTX8 :1;
[; ;pic16f887.h: 2519: };
[; ;pic16f887.h: 2520: struct {
[; ;pic16f887.h: 2521: unsigned :6;
[; ;pic16f887.h: 2522: unsigned TX8_9 :1;
[; ;pic16f887.h: 2523: };
[; ;pic16f887.h: 2524: } TXSTAbits_t;
[; ;pic16f887.h: 2525: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f887.h: 2584: extern volatile unsigned char SPBRG @ 0x099;
"2586
[; ;pic16f887.h: 2586: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f887.h: 2589: typedef union {
[; ;pic16f887.h: 2590: struct {
[; ;pic16f887.h: 2591: unsigned BRG0 :1;
[; ;pic16f887.h: 2592: unsigned BRG1 :1;
[; ;pic16f887.h: 2593: unsigned BRG2 :1;
[; ;pic16f887.h: 2594: unsigned BRG3 :1;
[; ;pic16f887.h: 2595: unsigned BRG4 :1;
[; ;pic16f887.h: 2596: unsigned BRG5 :1;
[; ;pic16f887.h: 2597: unsigned BRG6 :1;
[; ;pic16f887.h: 2598: unsigned BRG7 :1;
[; ;pic16f887.h: 2599: };
[; ;pic16f887.h: 2600: } SPBRGbits_t;
[; ;pic16f887.h: 2601: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f887.h: 2645: extern volatile unsigned char SPBRGH @ 0x09A;
"2647
[; ;pic16f887.h: 2647: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f887.h: 2650: typedef union {
[; ;pic16f887.h: 2651: struct {
[; ;pic16f887.h: 2652: unsigned SPBRGH :8;
[; ;pic16f887.h: 2653: };
[; ;pic16f887.h: 2654: struct {
[; ;pic16f887.h: 2655: unsigned BRG8 :1;
[; ;pic16f887.h: 2656: unsigned BRG9 :1;
[; ;pic16f887.h: 2657: unsigned BRG10 :1;
[; ;pic16f887.h: 2658: unsigned BRG11 :1;
[; ;pic16f887.h: 2659: unsigned BRG12 :1;
[; ;pic16f887.h: 2660: unsigned BRG13 :1;
[; ;pic16f887.h: 2661: unsigned BRG14 :1;
[; ;pic16f887.h: 2662: unsigned BRG15 :1;
[; ;pic16f887.h: 2663: };
[; ;pic16f887.h: 2664: } SPBRGHbits_t;
[; ;pic16f887.h: 2665: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f887.h: 2714: extern volatile unsigned char PWM1CON @ 0x09B;
"2716
[; ;pic16f887.h: 2716: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f887.h: 2719: typedef union {
[; ;pic16f887.h: 2720: struct {
[; ;pic16f887.h: 2721: unsigned PDC :7;
[; ;pic16f887.h: 2722: unsigned PRSEN :1;
[; ;pic16f887.h: 2723: };
[; ;pic16f887.h: 2724: struct {
[; ;pic16f887.h: 2725: unsigned PDC0 :1;
[; ;pic16f887.h: 2726: unsigned PDC1 :1;
[; ;pic16f887.h: 2727: unsigned PDC2 :1;
[; ;pic16f887.h: 2728: unsigned PDC3 :1;
[; ;pic16f887.h: 2729: unsigned PDC4 :1;
[; ;pic16f887.h: 2730: unsigned PDC5 :1;
[; ;pic16f887.h: 2731: unsigned PDC6 :1;
[; ;pic16f887.h: 2732: };
[; ;pic16f887.h: 2733: } PWM1CONbits_t;
[; ;pic16f887.h: 2734: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f887.h: 2783: extern volatile unsigned char ECCPAS @ 0x09C;
"2785
[; ;pic16f887.h: 2785: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f887.h: 2788: typedef union {
[; ;pic16f887.h: 2789: struct {
[; ;pic16f887.h: 2790: unsigned PSSBD :2;
[; ;pic16f887.h: 2791: unsigned PSSAC :2;
[; ;pic16f887.h: 2792: unsigned ECCPAS :3;
[; ;pic16f887.h: 2793: unsigned ECCPASE :1;
[; ;pic16f887.h: 2794: };
[; ;pic16f887.h: 2795: struct {
[; ;pic16f887.h: 2796: unsigned PSSBD0 :1;
[; ;pic16f887.h: 2797: unsigned PSSBD1 :1;
[; ;pic16f887.h: 2798: unsigned PSSAC0 :1;
[; ;pic16f887.h: 2799: unsigned PSSAC1 :1;
[; ;pic16f887.h: 2800: unsigned ECCPAS0 :1;
[; ;pic16f887.h: 2801: unsigned ECCPAS1 :1;
[; ;pic16f887.h: 2802: unsigned ECCPAS2 :1;
[; ;pic16f887.h: 2803: };
[; ;pic16f887.h: 2804: } ECCPASbits_t;
[; ;pic16f887.h: 2805: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f887.h: 2864: extern volatile unsigned char PSTRCON @ 0x09D;
"2866
[; ;pic16f887.h: 2866: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f887.h: 2869: typedef union {
[; ;pic16f887.h: 2870: struct {
[; ;pic16f887.h: 2871: unsigned STRA :1;
[; ;pic16f887.h: 2872: unsigned STRB :1;
[; ;pic16f887.h: 2873: unsigned STRC :1;
[; ;pic16f887.h: 2874: unsigned STRD :1;
[; ;pic16f887.h: 2875: unsigned STRSYNC :1;
[; ;pic16f887.h: 2876: };
[; ;pic16f887.h: 2877: } PSTRCONbits_t;
[; ;pic16f887.h: 2878: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f887.h: 2907: extern volatile unsigned char ADRESL @ 0x09E;
"2909
[; ;pic16f887.h: 2909: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f887.h: 2913: extern volatile unsigned char ADCON1 @ 0x09F;
"2915
[; ;pic16f887.h: 2915: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f887.h: 2918: typedef union {
[; ;pic16f887.h: 2919: struct {
[; ;pic16f887.h: 2920: unsigned :4;
[; ;pic16f887.h: 2921: unsigned VCFG0 :1;
[; ;pic16f887.h: 2922: unsigned VCFG1 :1;
[; ;pic16f887.h: 2923: unsigned :1;
[; ;pic16f887.h: 2924: unsigned ADFM :1;
[; ;pic16f887.h: 2925: };
[; ;pic16f887.h: 2926: } ADCON1bits_t;
[; ;pic16f887.h: 2927: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f887.h: 2946: extern volatile unsigned char WDTCON @ 0x105;
"2948
[; ;pic16f887.h: 2948: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f887.h: 2951: typedef union {
[; ;pic16f887.h: 2952: struct {
[; ;pic16f887.h: 2953: unsigned SWDTEN :1;
[; ;pic16f887.h: 2954: unsigned WDTPS :4;
[; ;pic16f887.h: 2955: };
[; ;pic16f887.h: 2956: struct {
[; ;pic16f887.h: 2957: unsigned :1;
[; ;pic16f887.h: 2958: unsigned WDTPS0 :1;
[; ;pic16f887.h: 2959: unsigned WDTPS1 :1;
[; ;pic16f887.h: 2960: unsigned WDTPS2 :1;
[; ;pic16f887.h: 2961: unsigned WDTPS3 :1;
[; ;pic16f887.h: 2962: };
[; ;pic16f887.h: 2963: } WDTCONbits_t;
[; ;pic16f887.h: 2964: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f887.h: 2998: extern volatile unsigned char CM1CON0 @ 0x107;
"3000
[; ;pic16f887.h: 3000: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f887.h: 3003: typedef union {
[; ;pic16f887.h: 3004: struct {
[; ;pic16f887.h: 3005: unsigned C1CH :2;
[; ;pic16f887.h: 3006: unsigned C1R :1;
[; ;pic16f887.h: 3007: unsigned :1;
[; ;pic16f887.h: 3008: unsigned C1POL :1;
[; ;pic16f887.h: 3009: unsigned C1OE :1;
[; ;pic16f887.h: 3010: unsigned C1OUT :1;
[; ;pic16f887.h: 3011: unsigned C1ON :1;
[; ;pic16f887.h: 3012: };
[; ;pic16f887.h: 3013: struct {
[; ;pic16f887.h: 3014: unsigned C1CH0 :1;
[; ;pic16f887.h: 3015: unsigned C1CH1 :1;
[; ;pic16f887.h: 3016: };
[; ;pic16f887.h: 3017: } CM1CON0bits_t;
[; ;pic16f887.h: 3018: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f887.h: 3062: extern volatile unsigned char CM2CON0 @ 0x108;
"3064
[; ;pic16f887.h: 3064: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f887.h: 3067: typedef union {
[; ;pic16f887.h: 3068: struct {
[; ;pic16f887.h: 3069: unsigned C2CH :2;
[; ;pic16f887.h: 3070: unsigned C2R :1;
[; ;pic16f887.h: 3071: unsigned :1;
[; ;pic16f887.h: 3072: unsigned C2POL :1;
[; ;pic16f887.h: 3073: unsigned C2OE :1;
[; ;pic16f887.h: 3074: unsigned C2OUT :1;
[; ;pic16f887.h: 3075: unsigned C2ON :1;
[; ;pic16f887.h: 3076: };
[; ;pic16f887.h: 3077: struct {
[; ;pic16f887.h: 3078: unsigned C2CH0 :1;
[; ;pic16f887.h: 3079: unsigned C2CH1 :1;
[; ;pic16f887.h: 3080: };
[; ;pic16f887.h: 3081: } CM2CON0bits_t;
[; ;pic16f887.h: 3082: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f887.h: 3126: extern volatile unsigned char CM2CON1 @ 0x109;
"3128
[; ;pic16f887.h: 3128: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f887.h: 3131: typedef union {
[; ;pic16f887.h: 3132: struct {
[; ;pic16f887.h: 3133: unsigned C2SYNC :1;
[; ;pic16f887.h: 3134: unsigned T1GSS :1;
[; ;pic16f887.h: 3135: unsigned :2;
[; ;pic16f887.h: 3136: unsigned C2RSEL :1;
[; ;pic16f887.h: 3137: unsigned C1RSEL :1;
[; ;pic16f887.h: 3138: unsigned MC2OUT :1;
[; ;pic16f887.h: 3139: unsigned MC1OUT :1;
[; ;pic16f887.h: 3140: };
[; ;pic16f887.h: 3141: } CM2CON1bits_t;
[; ;pic16f887.h: 3142: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f887.h: 3176: extern volatile unsigned char EEDATA @ 0x10C;
"3178
[; ;pic16f887.h: 3178: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f887.h: 3181: extern volatile unsigned char EEDAT @ 0x10C;
"3183
[; ;pic16f887.h: 3183: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f887.h: 3187: extern volatile unsigned char EEADR @ 0x10D;
"3189
[; ;pic16f887.h: 3189: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f887.h: 3193: extern volatile unsigned char EEDATH @ 0x10E;
"3195
[; ;pic16f887.h: 3195: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f887.h: 3199: extern volatile unsigned char EEADRH @ 0x10F;
"3201
[; ;pic16f887.h: 3201: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f887.h: 3205: extern volatile unsigned char SRCON @ 0x185;
"3207
[; ;pic16f887.h: 3207: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f887.h: 3210: typedef union {
[; ;pic16f887.h: 3211: struct {
[; ;pic16f887.h: 3212: unsigned FVREN :1;
[; ;pic16f887.h: 3213: unsigned :1;
[; ;pic16f887.h: 3214: unsigned PULSR :1;
[; ;pic16f887.h: 3215: unsigned PULSS :1;
[; ;pic16f887.h: 3216: unsigned C2REN :1;
[; ;pic16f887.h: 3217: unsigned C1SEN :1;
[; ;pic16f887.h: 3218: unsigned SR0 :1;
[; ;pic16f887.h: 3219: unsigned SR1 :1;
[; ;pic16f887.h: 3220: };
[; ;pic16f887.h: 3221: } SRCONbits_t;
[; ;pic16f887.h: 3222: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f887.h: 3261: extern volatile unsigned char BAUDCTL @ 0x187;
"3263
[; ;pic16f887.h: 3263: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f887.h: 3266: typedef union {
[; ;pic16f887.h: 3267: struct {
[; ;pic16f887.h: 3268: unsigned ABDEN :1;
[; ;pic16f887.h: 3269: unsigned WUE :1;
[; ;pic16f887.h: 3270: unsigned :1;
[; ;pic16f887.h: 3271: unsigned BRG16 :1;
[; ;pic16f887.h: 3272: unsigned SCKP :1;
[; ;pic16f887.h: 3273: unsigned :1;
[; ;pic16f887.h: 3274: unsigned RCIDL :1;
[; ;pic16f887.h: 3275: unsigned ABDOVF :1;
[; ;pic16f887.h: 3276: };
[; ;pic16f887.h: 3277: } BAUDCTLbits_t;
[; ;pic16f887.h: 3278: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f887.h: 3312: extern volatile unsigned char ANSEL @ 0x188;
"3314
[; ;pic16f887.h: 3314: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f887.h: 3317: typedef union {
[; ;pic16f887.h: 3318: struct {
[; ;pic16f887.h: 3319: unsigned ANS0 :1;
[; ;pic16f887.h: 3320: unsigned ANS1 :1;
[; ;pic16f887.h: 3321: unsigned ANS2 :1;
[; ;pic16f887.h: 3322: unsigned ANS3 :1;
[; ;pic16f887.h: 3323: unsigned ANS4 :1;
[; ;pic16f887.h: 3324: unsigned ANS5 :1;
[; ;pic16f887.h: 3325: unsigned ANS6 :1;
[; ;pic16f887.h: 3326: unsigned ANS7 :1;
[; ;pic16f887.h: 3327: };
[; ;pic16f887.h: 3328: } ANSELbits_t;
[; ;pic16f887.h: 3329: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f887.h: 3373: extern volatile unsigned char ANSELH @ 0x189;
"3375
[; ;pic16f887.h: 3375: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f887.h: 3378: typedef union {
[; ;pic16f887.h: 3379: struct {
[; ;pic16f887.h: 3380: unsigned ANS8 :1;
[; ;pic16f887.h: 3381: unsigned ANS9 :1;
[; ;pic16f887.h: 3382: unsigned ANS10 :1;
[; ;pic16f887.h: 3383: unsigned ANS11 :1;
[; ;pic16f887.h: 3384: unsigned ANS12 :1;
[; ;pic16f887.h: 3385: unsigned ANS13 :1;
[; ;pic16f887.h: 3386: };
[; ;pic16f887.h: 3387: } ANSELHbits_t;
[; ;pic16f887.h: 3388: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f887.h: 3422: extern volatile unsigned char EECON1 @ 0x18C;
"3424
[; ;pic16f887.h: 3424: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f887.h: 3427: typedef union {
[; ;pic16f887.h: 3428: struct {
[; ;pic16f887.h: 3429: unsigned RD :1;
[; ;pic16f887.h: 3430: unsigned WR :1;
[; ;pic16f887.h: 3431: unsigned WREN :1;
[; ;pic16f887.h: 3432: unsigned WRERR :1;
[; ;pic16f887.h: 3433: unsigned :3;
[; ;pic16f887.h: 3434: unsigned EEPGD :1;
[; ;pic16f887.h: 3435: };
[; ;pic16f887.h: 3436: } EECON1bits_t;
[; ;pic16f887.h: 3437: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f887.h: 3466: extern volatile unsigned char EECON2 @ 0x18D;
"3468
[; ;pic16f887.h: 3468: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f887.h: 3478: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f887.h: 3480: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f887.h: 3482: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f887.h: 3484: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f887.h: 3486: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f887.h: 3488: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f887.h: 3490: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f887.h: 3492: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f887.h: 3494: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f887.h: 3496: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f887.h: 3498: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f887.h: 3500: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f887.h: 3502: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f887.h: 3504: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f887.h: 3506: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f887.h: 3508: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f887.h: 3510: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f887.h: 3512: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f887.h: 3514: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f887.h: 3516: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f887.h: 3518: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f887.h: 3520: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic16f887.h: 3522: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic16f887.h: 3524: extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;
[; ;pic16f887.h: 3526: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f887.h: 3528: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f887.h: 3530: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f887.h: 3532: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f887.h: 3534: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f887.h: 3536: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f887.h: 3538: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f887.h: 3540: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f887.h: 3542: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f887.h: 3544: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f887.h: 3546: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f887.h: 3548: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f887.h: 3550: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f887.h: 3552: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f887.h: 3554: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f887.h: 3556: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f887.h: 3558: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f887.h: 3560: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f887.h: 3562: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f887.h: 3564: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f887.h: 3566: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f887.h: 3568: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f887.h: 3570: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f887.h: 3572: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f887.h: 3574: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f887.h: 3576: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f887.h: 3578: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f887.h: 3580: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f887.h: 3582: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f887.h: 3584: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f887.h: 3586: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f887.h: 3588: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f887.h: 3590: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f887.h: 3592: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f887.h: 3594: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f887.h: 3596: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f887.h: 3598: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f887.h: 3600: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f887.h: 3602: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f887.h: 3604: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f887.h: 3606: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f887.h: 3608: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f887.h: 3610: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f887.h: 3612: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f887.h: 3614: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f887.h: 3616: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f887.h: 3618: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f887.h: 3620: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f887.h: 3622: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f887.h: 3624: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f887.h: 3626: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f887.h: 3628: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f887.h: 3630: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f887.h: 3632: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3634: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3636: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f887.h: 3638: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f887.h: 3640: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f887.h: 3642: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f887.h: 3644: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f887.h: 3646: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f887.h: 3648: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3650: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3652: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f887.h: 3654: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f887.h: 3656: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f887.h: 3658: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f887.h: 3660: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f887.h: 3662: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f887.h: 3664: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f887.h: 3666: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f887.h: 3668: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3670: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f887.h: 3672: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3674: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3676: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3678: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3680: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3682: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3684: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f887.h: 3686: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f887.h: 3688: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f887.h: 3690: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f887.h: 3692: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f887.h: 3694: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f887.h: 3696: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f887.h: 3698: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f887.h: 3700: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f887.h: 3702: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f887.h: 3704: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f887.h: 3706: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3708: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3710: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3712: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f887.h: 3714: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3716: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3718: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f887.h: 3720: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f887.h: 3722: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f887.h: 3724: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f887.h: 3726: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f887.h: 3728: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f887.h: 3730: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f887.h: 3732: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f887.h: 3734: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f887.h: 3736: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f887.h: 3738: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f887.h: 3740: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f887.h: 3742: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f887.h: 3744: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f887.h: 3746: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f887.h: 3748: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f887.h: 3750: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f887.h: 3752: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f887.h: 3754: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f887.h: 3756: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f887.h: 3758: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f887.h: 3760: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f887.h: 3762: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f887.h: 3764: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f887.h: 3766: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f887.h: 3768: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f887.h: 3770: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f887.h: 3772: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f887.h: 3774: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f887.h: 3776: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f887.h: 3778: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f887.h: 3780: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f887.h: 3782: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f887.h: 3784: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f887.h: 3786: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f887.h: 3788: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f887.h: 3790: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f887.h: 3792: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f887.h: 3794: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f887.h: 3796: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f887.h: 3798: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f887.h: 3800: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f887.h: 3802: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f887.h: 3804: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f887.h: 3806: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f887.h: 3808: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f887.h: 3810: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f887.h: 3812: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f887.h: 3814: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f887.h: 3816: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f887.h: 3818: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f887.h: 3820: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f887.h: 3822: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f887.h: 3824: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f887.h: 3826: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f887.h: 3828: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f887.h: 3830: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f887.h: 3832: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f887.h: 3834: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f887.h: 3836: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f887.h: 3838: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f887.h: 3840: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f887.h: 3842: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f887.h: 3844: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f887.h: 3846: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f887.h: 3848: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f887.h: 3850: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f887.h: 3852: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f887.h: 3854: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f887.h: 3856: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f887.h: 3858: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f887.h: 3860: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f887.h: 3862: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f887.h: 3864: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f887.h: 3866: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f887.h: 3868: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f887.h: 3870: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f887.h: 3872: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f887.h: 3874: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f887.h: 3876: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f887.h: 3878: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3880: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3882: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3884: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f887.h: 3886: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f887.h: 3888: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f887.h: 3890: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f887.h: 3892: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f887.h: 3894: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f887.h: 3896: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f887.h: 3898: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f887.h: 3900: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f887.h: 3902: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f887.h: 3904: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f887.h: 3906: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f887.h: 3908: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f887.h: 3910: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f887.h: 3912: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f887.h: 3914: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f887.h: 3916: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f887.h: 3918: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3920: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f887.h: 3922: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f887.h: 3924: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f887.h: 3926: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3928: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3930: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3932: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3934: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f887.h: 3936: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f887.h: 3938: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f887.h: 3940: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f887.h: 3942: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f887.h: 3944: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f887.h: 3946: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f887.h: 3948: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f887.h: 3950: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f887.h: 3952: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f887.h: 3954: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f887.h: 3956: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f887.h: 3958: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f887.h: 3960: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f887.h: 3962: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f887.h: 3964: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f887.h: 3966: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f887.h: 3968: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f887.h: 3970: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f887.h: 3972: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f887.h: 3974: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f887.h: 3976: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f887.h: 3978: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f887.h: 3980: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f887.h: 3982: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f887.h: 3984: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f887.h: 3986: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 3988: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 3990: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f887.h: 3992: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f887.h: 3994: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f887.h: 3996: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 3998: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4000: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f887.h: 4002: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4004: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f887.h: 4006: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4008: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f887.h: 4010: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f887.h: 4012: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 4014: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 4016: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f887.h: 4018: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f887.h: 4020: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f887.h: 4022: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f887.h: 4024: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f887.h: 4026: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f887.h: 4028: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f887.h: 4030: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f887.h: 4032: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f887.h: 4034: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f887.h: 4036: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f887.h: 4038: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f887.h: 4040: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f887.h: 4042: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f887.h: 4044: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f887.h: 4046: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f887.h: 4048: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f887.h: 4050: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f887.h: 4052: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f887.h: 4054: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f887.h: 4056: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f887.h: 4058: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f887.h: 4060: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f887.h: 4062: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f887.h: 4064: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f887.h: 4066: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f887.h: 4068: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f887.h: 4070: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f887.h: 4072: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f887.h: 4074: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f887.h: 4076: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f887.h: 4078: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f887.h: 4080: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f887.h: 4082: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f887.h: 4084: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f887.h: 4086: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f887.h: 4088: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f887.h: 4090: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f887.h: 4092: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f887.h: 4094: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f887.h: 4096: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f887.h: 4098: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f887.h: 4100: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f887.h: 4102: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f887.h: 4104: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f887.h: 4106: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f887.h: 4108: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f887.h: 4110: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f887.h: 4112: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f887.h: 4114: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f887.h: 4116: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f887.h: 4118: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f887.h: 4120: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f887.h: 4122: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f887.h: 4124: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4126: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4128: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4130: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4132: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f887.h: 4134: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f887.h: 4136: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f887.h: 4138: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f887.h: 4140: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f887.h: 4142: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f887.h: 4144: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f887.h: 4146: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f887.h: 4148: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f887.h: 4150: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f887.h: 4152: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f887.h: 4154: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f887.h: 4156: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f887.h: 4158: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f887.h: 4160: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f887.h: 4162: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f887.h: 4164: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f887.h: 4166: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f887.h: 4168: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f887.h: 4170: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f887.h: 4172: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f887.h: 4174: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f887.h: 4176: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f887.h: 4178: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f887.h: 4180: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f887.h: 4182: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f887.h: 4184: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f887.h: 4186: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f887.h: 4188: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f887.h: 4190: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f887.h: 4192: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f887.h: 4194: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f887.h: 4196: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f887.h: 4198: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f887.h: 4200: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f887.h: 4202: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4204: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4206: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4208: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4210: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 4212: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f887.h: 4214: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f887.h: 4216: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f887.h: 4218: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 4220: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4222: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f887.h: 4224: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4226: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 4228: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
[; ;string.h: 4: typedef int ptrdiff_t;
[; ;string.h: 5: typedef unsigned size_t;
[; ;string.h: 6: typedef unsigned short wchar_t;
[; ;string.h: 9: extern int errno;
[; ;string.h: 22: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 23: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 24: extern void * memset(void *, int, size_t);
[; ;string.h: 35: extern char * strcat(char *, const char *);
[; ;string.h: 36: extern char * strcpy(char *, const char *);
[; ;string.h: 37: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 38: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 39: extern char * strdup(const char *);
[; ;string.h: 40: extern char * strtok(char *, const char *);
[; ;string.h: 43: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 44: extern int strcmp(const char *, const char *);
[; ;string.h: 45: extern int stricmp(const char *, const char *);
[; ;string.h: 46: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 47: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 48: extern void * memchr(const void *, int, size_t);
[; ;string.h: 49: extern size_t strcspn(const char *, const char *);
[; ;string.h: 50: extern char * strpbrk(const char *, const char *);
[; ;string.h: 51: extern size_t strspn(const char *, const char *);
[; ;string.h: 52: extern char * strstr(const char *, const char *);
[; ;string.h: 53: extern char * stristr(const char *, const char *);
[; ;string.h: 54: extern char * strerror(int);
[; ;string.h: 55: extern size_t strlen(const char *);
[; ;string.h: 56: extern char * strchr(const char *, int);
[; ;string.h: 57: extern char * strichr(const char *, int);
[; ;string.h: 58: extern char * strrchr(const char *, int);
[; ;string.h: 59: extern char * strrichr(const char *, int);
[; ;system.h: 41: typedef unsigned char uChar;
[; ;system.h: 42: typedef unsigned int uInt;
[; ;system.h: 43: typedef unsigned long uLong;
[; ;system.h: 44: typedef signed char sChar;
[; ;system.h: 45: typedef signed int sInt;
[; ;system.h: 46: typedef signed long sLong;
[; ;lcd.h: 25: void lcdInit(void);
[; ;lcd.h: 26: void lcdWrite(char rs, uChar data);
[; ;lcd.h: 27: void lcdGoto(uChar row, uChar col);
[; ;lcd.h: 28: void lcdPutstr(const char *s);
[; ;lcd.h: 29: void lcdNumber(uInt no, uChar base, uChar digit);
"34 lcd.h
[v _lcdInit `(v ~T0 @X0 1 ef ]
"35
{
[; ;lcd.h: 34: void lcdInit(void)
[; ;lcd.h: 35: {
[e :U _lcdInit ]
[f ]
[; ;lcd.h: 36: _delay((unsigned long)((20)*(8000000/4000.0)));
"36
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;lcd.h: 37: lcdWrite(0, 0x30);
"37
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 48 `i `uc ]
[; ;lcd.h: 38: lcdWrite(0, 0x30);
"38
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 48 `i `uc ]
[; ;lcd.h: 39: lcdWrite(0, 0x30);
"39
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 48 `i `uc ]
[; ;lcd.h: 40: lcdWrite(0, 0x38);
"40
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 56 `i `uc ]
[; ;lcd.h: 41: lcdWrite(0, 0x0C);
"41
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 12 `i `uc ]
[; ;lcd.h: 42: lcdWrite(0, 0x01);
"42
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;lcd.h: 43: lcdWrite(0, 0x06);
"43
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 6 `i `uc ]
[; ;lcd.h: 44: lcdWrite(0, 0x02);
"44
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;lcd.h: 45: _delay((unsigned long)((2)*(8000000/4000.0)));
"45
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;lcd.h: 46: }
"46
[e :UE 139 ]
}
"48
[v _lcdWrite `(v ~T0 @X0 1 ef2`uc`uc ]
"49
{
[; ;lcd.h: 48: void lcdWrite(uChar rs, uChar data)
[; ;lcd.h: 49: {
[e :U _lcdWrite ]
"48
[v _rs `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
"49
[f ]
[; ;lcd.h: 50: RB6 = rs;
"50
[e = _RB6 -> _rs `b ]
[; ;lcd.h: 51: PORTD = data;
"51
[e = _PORTD _data ]
[; ;lcd.h: 52: ((RE2=1), _delay((unsigned long)((2)*(8000000/4000000.0))), (RE2=0), _delay((unsigned long)((2)*(8000000/4000000.0))));
"52
[e ; ; ; -> = _RE2 -> -> 1 `i `b `i ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000000.0 `ul -> = _RE2 -> -> 0 `i `b `i ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;lcd.h: 53: _delay((unsigned long)((40)*(8000000/4000000.0)));
"53
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;lcd.h: 54: }
"54
[e :UE 140 ]
}
"56
[v _lcdGoto `(v ~T0 @X0 1 ef2`uc`uc ]
"57
{
[; ;lcd.h: 56: void lcdGoto(uChar row, uChar col)
[; ;lcd.h: 57: {
[e :U _lcdGoto ]
"56
[v _row `uc ~T0 @X0 1 r1 ]
[v _col `uc ~T0 @X0 1 r2 ]
"57
[f ]
[; ;lcd.h: 58: switch(row)
"58
[e $U 143  ]
[; ;lcd.h: 59: {
"59
{
[; ;lcd.h: 60: case 1: lcdWrite(0, 0x80 + col - 1);
"60
[e :U 144 ]
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> - + -> 128 `i -> _col `i -> 1 `i `uc ]
[; ;lcd.h: 61: break;
"61
[e $U 142  ]
[; ;lcd.h: 62: case 2: lcdWrite(0, 0xC0 + col - 1);
"62
[e :U 145 ]
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> - + -> 192 `i -> _col `i -> 1 `i `uc ]
[; ;lcd.h: 63: break;
"63
[e $U 142  ]
[; ;lcd.h: 64: case 3: lcdWrite(0, 0x94 + col - 1);
"64
[e :U 146 ]
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> - + -> 148 `i -> _col `i -> 1 `i `uc ]
[; ;lcd.h: 65: break;
"65
[e $U 142  ]
[; ;lcd.h: 66: case 4: lcdWrite(0, 0xD4 + col - 1);
"66
[e :U 147 ]
[e ( _lcdWrite (2 , -> -> 0 `i `uc -> - + -> 212 `i -> _col `i -> 1 `i `uc ]
[; ;lcd.h: 67: break;
"67
[e $U 142  ]
"68
}
[; ;lcd.h: 68: }
[e $U 142  ]
"58
[e :U 143 ]
[e [\ _row , $ -> -> 1 `i `uc 144
 , $ -> -> 2 `i `uc 145
 , $ -> -> 3 `i `uc 146
 , $ -> -> 4 `i `uc 147
 142 ]
"68
[e :U 142 ]
[; ;lcd.h: 69: }
"69
[e :UE 141 ]
}
"71
[v _lcdPutstr `(v ~T0 @X0 1 ef1`*Cuc ]
"72
{
[; ;lcd.h: 71: void lcdPutstr(const char *s)
[; ;lcd.h: 72: {
[e :U _lcdPutstr ]
"71
[v _s `*Cuc ~T0 @X0 1 r1 ]
"72
[f ]
[; ;lcd.h: 73: while(*s >= ' ' && *s <= '~') lcdWrite(1, *s++);
"73
[e $U 149  ]
[e :U 150 ]
[e ( _lcdWrite (2 , -> -> 1 `i `uc *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 149 ]
[e $ && >= -> *U _s `ui -> 32 `ui <= -> *U _s `ui -> 126 `ui 150  ]
[e :U 151 ]
[; ;lcd.h: 74: }
"74
[e :UE 148 ]
}
"76
[v _lcdNumber `(v ~T0 @X0 1 ef3`ui`uc`uc ]
"77
{
[; ;lcd.h: 76: void lcdNumber(uInt no, uChar base, uChar digit)
[; ;lcd.h: 77: {
[e :U _lcdNumber ]
"76
[v _no `ui ~T0 @X0 1 r1 ]
[v _base `uc ~T0 @X0 1 r2 ]
[v _digit `uc ~T0 @X0 1 r3 ]
"77
[f ]
"78
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[v _di `uc ~T0 @X0 -> 10 `i a ]
[; ;lcd.h: 78: uChar i, j, di[10];
[; ;lcd.h: 79: for(i = 0; i < 10; i++) di[i] = 0;
"79
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 153  ]
[e $U 154  ]
[e :U 153 ]
[e = *U + &U _di * -> _i `ux -> -> # *U &U _di `ui `ux -> -> 0 `i `uc ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 153  ]
[e :U 154 ]
}
[; ;lcd.h: 80: i = 0;
"80
[e = _i -> -> 0 `i `uc ]
[; ;lcd.h: 82: do
"82
[e :U 158 ]
[; ;lcd.h: 83: {
"83
{
[; ;lcd.h: 84: di[i++] = no % base;
"84
[e = *U + &U _di * -> ++ _i -> -> 1 `i `uc `ux -> -> # *U &U _di `ui `ux -> % _no -> _base `ui `uc ]
[; ;lcd.h: 85: no = no / base;
"85
[e = _no / _no -> _base `ui ]
"86
}
[; ;lcd.h: 86: }
[; ;lcd.h: 87: while(no);
"87
[e $ != _no -> -> 0 `i `ui 158  ]
[e :U 157 ]
[; ;lcd.h: 89: for(j = digit; j > 0; j--)
"89
{
[e = _j _digit ]
[e $ > -> _j `i -> 0 `i 159  ]
[e $U 160  ]
"90
[e :U 159 ]
[; ;lcd.h: 90: {
{
[; ;lcd.h: 91: if(di[j - 1] < 10) lcdWrite(1, di[j - 1] + '0');
"91
[e $ ! < -> *U + &U _di * -> -> - -> _j `i -> 1 `i `ui `ux -> -> # *U &U _di `ui `ux `i -> 10 `i 162  ]
[e ( _lcdWrite (2 , -> -> 1 `i `uc -> + -> *U + &U _di * -> -> - -> _j `i -> 1 `i `ui `ux -> -> # *U &U _di `ui `ux `ui -> 48 `ui `uc ]
[e $U 163  ]
"92
[e :U 162 ]
[; ;lcd.h: 92: else lcdWrite(1, di[j - 1] - 10 + 'A');
[e ( _lcdWrite (2 , -> -> 1 `i `uc -> + -> - -> *U + &U _di * -> -> - -> _j `i -> 1 `i `ui `ux -> -> # *U &U _di `ui `ux `i -> 10 `i `ui -> 65 `ui `uc ]
[e :U 163 ]
"93
}
"89
[e -- _j -> -> 1 `i `uc ]
[e $ > -> _j `i -> 0 `i 159  ]
[e :U 160 ]
"93
}
[; ;lcd.h: 93: }
[; ;lcd.h: 94: }
"94
[e :UE 152 ]
}
[; ;uart.h: 8: void uartInit(uLong baudRate);
[; ;uart.h: 9: void uartTransmit(uChar dataTx);
[; ;uart.h: 10: void uartPutstr(const char *s);
[; ;uart.h: 11: uChar uartReceive(void);
[; ;uart.h: 12: void uartNumber(uInt no, uChar base, uChar digit);
"19 uart.h
[v _uartInit `(v ~T0 @X0 1 ef1`ul ]
"20
{
[; ;uart.h: 19: void uartInit(uLong baudrate)
[; ;uart.h: 20: {
[e :U _uartInit ]
"19
[v _baudrate `ul ~T0 @X0 1 r1 ]
"20
[f ]
[; ;uart.h: 21: TXEN = 1;
"21
[e = _TXEN -> -> 1 `i `b ]
[; ;uart.h: 22: TX9 = 0;
"22
[e = _TX9 -> -> 0 `i `b ]
[; ;uart.h: 23: RX9 = 0;
"23
[e = _RX9 -> -> 0 `i `b ]
[; ;uart.h: 24: CREN = 1;
"24
[e = _CREN -> -> 1 `i `b ]
[; ;uart.h: 25: SPEN = 1;
"25
[e = _SPEN -> -> 1 `i `b ]
[; ;uart.h: 27: if(baudrate > 9000)
"27
[e $ ! > _baudrate -> -> -> 9000 `i `l `ul 165  ]
[; ;uart.h: 28: {
"28
{
[; ;uart.h: 29: BRGH = 1;
"29
[e = _BRGH -> -> 1 `i `b ]
[; ;uart.h: 30: SPBRG = (uInt) (((float) 8000000 / (float) baudrate / 16.0) - 0.5);
"30
[e = _SPBRG -> -> - / -> / -> -> 8000000 `l `f -> _baudrate `f `d .16.0 .0.5 `ui `uc ]
"31
}
[; ;uart.h: 31: }
[e $U 166  ]
"32
[e :U 165 ]
[; ;uart.h: 32: else if(baudrate < 9000)
[e $ ! < _baudrate -> -> -> 9000 `i `l `ul 167  ]
[; ;uart.h: 33: {
"33
{
[; ;uart.h: 34: BRGH = 0;
"34
[e = _BRGH -> -> 0 `i `b ]
[; ;uart.h: 35: SPBRG = (uInt) (((float) 8000000 / (float) baudrate / 64.0) - 0.5);
"35
[e = _SPBRG -> -> - / -> / -> -> 8000000 `l `f -> _baudrate `f `d .64.0 .0.5 `ui `uc ]
"36
}
[e :U 167 ]
"37
[e :U 166 ]
[; ;uart.h: 36: }
[; ;uart.h: 37: }
[e :UE 164 ]
}
"39
[v _uartTransmit `(v ~T0 @X0 1 ef1`uc ]
"40
{
[; ;uart.h: 39: void uartTransmit(uChar dataTx)
[; ;uart.h: 40: {
[e :U _uartTransmit ]
"39
[v _dataTx `uc ~T0 @X0 1 r1 ]
"40
[f ]
[; ;uart.h: 41: while(!TXIF);
"41
[e $U 169  ]
[e :U 170 ]
[e :U 169 ]
[e $ ! _TXIF 170  ]
[e :U 171 ]
[; ;uart.h: 42: TXREG = dataTx;
"42
[e = _TXREG _dataTx ]
[; ;uart.h: 43: }
"43
[e :UE 168 ]
}
"45
[v _uartPutstr `(v ~T0 @X0 1 ef1`*Cuc ]
"46
{
[; ;uart.h: 45: void uartPutstr(const char *s)
[; ;uart.h: 46: {
[e :U _uartPutstr ]
"45
[v _s `*Cuc ~T0 @X0 1 r1 ]
"46
[f ]
[; ;uart.h: 47: while(*s) uartTransmit(*s++);
"47
[e $U 173  ]
[e :U 174 ]
[e ( _uartTransmit (1 *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 173 ]
[e $ != -> *U _s `i -> -> -> 0 `i `Cuc `i 174  ]
[e :U 175 ]
[; ;uart.h: 48: }
"48
[e :UE 172 ]
}
"50
[v _uartReceive `(uc ~T0 @X0 1 ef ]
"51
{
[; ;uart.h: 50: uChar uartReceive(void)
[; ;uart.h: 51: {
[e :U _uartReceive ]
[f ]
[; ;uart.h: 52: if(OERR)
"52
[e $ ! _OERR 177  ]
[; ;uart.h: 53: {
"53
{
[; ;uart.h: 54: CREN = 0;
"54
[e = _CREN -> -> 0 `i `b ]
[; ;uart.h: 55: CREN = 1;
"55
[e = _CREN -> -> 1 `i `b ]
"56
}
[e :U 177 ]
[; ;uart.h: 56: }
[; ;uart.h: 57: while(!RCIF);
"57
[e $U 178  ]
[e :U 179 ]
[e :U 178 ]
[e $ ! _RCIF 179  ]
[e :U 180 ]
[; ;uart.h: 58: return RCREG;
"58
[e ) _RCREG ]
[e $UE 176  ]
[; ;uart.h: 59: }
"59
[e :UE 176 ]
}
"61
[v _uartNumber `(v ~T0 @X0 1 ef3`ui`uc`uc ]
"62
{
[; ;uart.h: 61: void uartNumber(uInt no, uChar base, uChar digit)
[; ;uart.h: 62: {
[e :U _uartNumber ]
"61
[v _no `ui ~T0 @X0 1 r1 ]
[v _base `uc ~T0 @X0 1 r2 ]
[v _digit `uc ~T0 @X0 1 r3 ]
"62
[f ]
"63
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[v _di `uc ~T0 @X0 -> 10 `i a ]
[; ;uart.h: 63: char i, j, di[10];
[; ;uart.h: 64: for(i = 0; i < 10; i++) di[i] = 0;
"64
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 182  ]
[e $U 183  ]
[e :U 182 ]
[e = *U + &U _di * -> _i `ux -> -> # *U &U _di `ui `ux -> -> 0 `i `uc ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 182  ]
[e :U 183 ]
}
[; ;uart.h: 65: i = 0;
"65
[e = _i -> -> 0 `i `uc ]
[; ;uart.h: 67: do
"67
[e :U 187 ]
[; ;uart.h: 68: {
"68
{
[; ;uart.h: 69: di[i++] = no % base;
"69
[e = *U + &U _di * -> ++ _i -> -> 1 `i `uc `ux -> -> # *U &U _di `ui `ux -> % _no -> _base `ui `uc ]
[; ;uart.h: 70: no = no / base;
"70
[e = _no / _no -> _base `ui ]
"71
}
[; ;uart.h: 71: }
[; ;uart.h: 72: while(no);
"72
[e $ != _no -> -> 0 `i `ui 187  ]
[e :U 186 ]
[; ;uart.h: 74: for(j = digit; j > 0; j--)
"74
{
[e = _j _digit ]
[e $ > -> _j `i -> 0 `i 188  ]
[e $U 189  ]
"75
[e :U 188 ]
[; ;uart.h: 75: {
{
[; ;uart.h: 76: if(di[j - 1] < 10) uartTransmit(di[j - 1] + '0');
"76
[e $ ! < -> *U + &U _di * -> -> - -> _j `i -> 1 `i `ui `ux -> -> # *U &U _di `ui `ux `i -> 10 `i 191  ]
[e ( _uartTransmit (1 -> + -> *U + &U _di * -> -> - -> _j `i -> 1 `i `ui `ux -> -> # *U &U _di `ui `ux `ui -> 48 `ui `uc ]
[e $U 192  ]
"77
[e :U 191 ]
[; ;uart.h: 77: else uartTransmit(di[j - 1] - 10 + 'A');
[e ( _uartTransmit (1 -> + -> - -> *U + &U _di * -> -> - -> _j `i -> 1 `i `ui `ux -> -> # *U &U _di `ui `ux `i -> 10 `i `ui -> 65 `ui `uc ]
[e :U 192 ]
"78
}
"74
[e -- _j -> -> 1 `i `uc ]
[e $ > -> _j `i -> 0 `i 188  ]
[e :U 189 ]
"78
}
[; ;uart.h: 78: }
[; ;uart.h: 79: }
"79
[e :UE 181 ]
}
[; ;pwm.h: 8: void setPwmRC1(int freq, int duty);
[; ;pwm.h: 9: void setPwmRC2(int freq, int duty);
"12 pwm.h
[v _setPwmRC1 `(v ~T0 @X0 1 ef2`i`i ]
"13
{
[; ;pwm.h: 12: void setPwmRC1(int freq, int duty)
[; ;pwm.h: 13: {
[e :U _setPwmRC1 ]
"12
[v _freq `i ~T0 @X0 1 r1 ]
[v _duty `i ~T0 @X0 1 r2 ]
"13
[f ]
"14
[v _a `i ~T0 @X0 1 a ]
[; ;pwm.h: 14: int a;
[; ;pwm.h: 15: T2CON = 0b00000111;
"15
[e = _T2CON -> -> 7 `i `uc ]
[; ;pwm.h: 16: CCP2CON = 0b00001100;
"16
[e = _CCP2CON -> -> 12 `i `uc ]
[; ;pwm.h: 17: PR2 = (8000000 / (4 * 16)) / (freq) - 1;
"17
[e = _PR2 -> - / / -> 8000000 `l -> * -> 4 `i -> 16 `i `l -> _freq `l -> -> 1 `i `l `uc ]
[; ;pwm.h: 18: a = (PR2 + 1) * duty / 25;
"18
[e = _a / * + -> _PR2 `i -> 1 `i _duty -> 25 `i ]
[; ;pwm.h: 19: CCPR2L = a / 4;
"19
[e = _CCPR2L -> / _a -> 4 `i `uc ]
[; ;pwm.h: 20: CCP2CON = (CCP2CON & 0b11001111) | ((a % 4) << 4);
"20
[e = _CCP2CON -> | & -> _CCP2CON `i -> 207 `i << % _a -> 4 `i -> 4 `i `uc ]
[; ;pwm.h: 21: }
"21
[e :UE 193 ]
}
"23
[v _setPwmRC2 `(v ~T0 @X0 1 ef2`i`i ]
"24
{
[; ;pwm.h: 23: void setPwmRC2(int freq, int duty)
[; ;pwm.h: 24: {
[e :U _setPwmRC2 ]
"23
[v _freq `i ~T0 @X0 1 r1 ]
[v _duty `i ~T0 @X0 1 r2 ]
"24
[f ]
"25
[v _a `i ~T0 @X0 1 a ]
[; ;pwm.h: 25: int a;
[; ;pwm.h: 26: T2CON = 0b00000111;
"26
[e = _T2CON -> -> 7 `i `uc ]
[; ;pwm.h: 27: CCP1CON = 0b00001100;
"27
[e = _CCP1CON -> -> 12 `i `uc ]
[; ;pwm.h: 28: PR2 = (8000000 / (4 * 16)) / (freq) - 1;
"28
[e = _PR2 -> - / / -> 8000000 `l -> * -> 4 `i -> 16 `i `l -> _freq `l -> -> 1 `i `l `uc ]
[; ;pwm.h: 29: a = (PR2 + 1) * duty / 25;
"29
[e = _a / * + -> _PR2 `i -> 1 `i _duty -> 25 `i ]
[; ;pwm.h: 30: CCPR1L = a / 4;
"30
[e = _CCPR1L -> / _a -> 4 `i `uc ]
[; ;pwm.h: 31: CCP1CON = (CCP1CON & 0b11001111) | ((a % 4) << 4);
"31
[e = _CCP1CON -> | & -> _CCP1CON `i -> 207 `i << % _a -> 4 `i -> 4 `i `uc ]
[; ;pwm.h: 32: }
"32
[e :UE 194 ]
}
"18 main.c
[p x FOSC=INTRC_NOCLKOUT ]
"19
[p x WDTE=OFF ]
"20
[p x PWRTE=ON ]
"21
[p x MCLRE=ON ]
"22
[p x CP=OFF ]
"23
[p x CPD=OFF ]
"24
[p x BOREN=OFF ]
"25
[p x IESO=OFF ]
"26
[p x FCMEN=OFF ]
"27
[p x LVP=OFF ]
[; ;main.c: 30: void picInit(void);
[; ;main.c: 31: void beep(uChar times, uInt delayMs);
[; ;main.c: 32: void wifiString(const char *s);
[; ;main.c: 33: void motor(sChar speedLM, sChar speedRM);
"38
[v _main `(v ~T0 @X0 1 ef ]
"39
{
[; ;main.c: 38: void main(void)
[; ;main.c: 39: {
[e :U _main ]
[f ]
"40
[v _i `ui ~T0 @X0 1 a ]
"41
[v _path `uc ~T0 @X0 -> 20 `i a ]
[v _pathLength `uc ~T0 @X0 1 a ]
[; ;main.c: 40: uInt i;
[; ;main.c: 41: uChar path[20], pathLength = 0, pathTotal, dir = 0;
[e = _pathLength -> -> 0 `i `uc ]
[v _pathTotal `uc ~T0 @X0 1 a ]
[v _dir `uc ~T0 @X0 1 a ]
[e = _dir -> -> 0 `i `uc ]
"42
[v _simplified `uc ~T0 @X0 1 a ]
[; ;main.c: 42: uChar simplified = 0, string[3];
[e = _simplified -> -> 0 `i `uc ]
[v _string `uc ~T0 @X0 -> 3 `i a ]
"43
[v _buzzerCount `ul ~T0 @X0 1 a ]
[; ;main.c: 43: uLong buzzerCount = 0;
[e = _buzzerCount -> -> -> 0 `i `l `ul ]
[; ;main.c: 45: picInit();
"45
[e ( _picInit ..  ]
[; ;main.c: 46: lcdInit();
"46
[e ( _lcdInit ..  ]
[; ;main.c: 47: beep(2, 50);
"47
[e ( _beep (2 , -> -> 2 `i `uc -> -> 50 `i `ui ]
[; ;main.c: 49: (lcdWrite(0, 1), _delay((unsigned long)((2)*(8000000/4000.0))));
"49
[e ; ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 1 `i `uc ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 50: lcdPutstr("SW1:Maze");
"50
[e ( _lcdPutstr (1 :s 1C ]
[; ;main.c: 51: lcdGoto(2,1);
"51
[e ( _lcdGoto (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 52: lcdPutstr("SW2:Line");
"52
[e ( _lcdPutstr (1 :s 2C ]
[; ;main.c: 54: while(1)
"54
[e :U 197 ]
[; ;main.c: 55: {
"55
{
[; ;main.c: 56: if(!RB0)
"56
[e $ ! ! _RB0 199  ]
[; ;main.c: 57: {
"57
{
[; ;main.c: 58: (lcdWrite(0, 1), _delay((unsigned long)((2)*(8000000/4000.0))));
"58
[e ; ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 1 `i `uc ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 59: lcdPutstr("  Maze  ");
"59
[e ( _lcdPutstr (1 :s 3C ]
[; ;main.c: 60: lcdGoto(2,1);
"60
[e ( _lcdGoto (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 61: lcdPutstr("Solving.");
"61
[e ( _lcdPutstr (1 :s 4C ]
[; ;main.c: 62: _delay((unsigned long)((1000)*(8000000/4000.0)));
"62
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 63: (lcdWrite(0, 1), _delay((unsigned long)((2)*(8000000/4000.0))));
"63
[e ; ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 1 `i `uc ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 64: lcdPutstr("Path:   ");
"64
[e ( _lcdPutstr (1 :s 5C ]
[; ;main.c: 65: beep(1, 50);
"65
[e ( _beep (2 , -> -> 1 `i `uc -> -> 50 `i `ui ]
[; ;main.c: 66: break;
"66
[e $U 198  ]
"67
}
[; ;main.c: 67: }
[e $U 200  ]
"68
[e :U 199 ]
[; ;main.c: 68: else if(!RB1)
[e $ ! ! _RB1 201  ]
[; ;main.c: 69: {
"69
{
[; ;main.c: 70: (lcdWrite(0, 1), _delay((unsigned long)((2)*(8000000/4000.0))));
"70
[e ; ( _lcdWrite (2 , -> -> 0 `i `uc -> -> 1 `i `uc ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 71: lcdPutstr("Line    ");
"71
[e ( _lcdPutstr (1 :s 6C ]
[; ;main.c: 72: lcdGoto(2,1);
"72
[e ( _lcdGoto (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 73: lcdPutstr("Follower");
"73
[e ( _lcdPutstr (1 :s 7C ]
[; ;main.c: 74: beep(1, 50);
"74
[e ( _beep (2 , -> -> 1 `i `uc -> -> 50 `i `ui ]
[; ;main.c: 75: while(1)
"75
[e :U 203 ]
[; ;main.c: 76: {
"76
{
[; ;main.c: 77: buzzerCount++;
"77
[e ++ _buzzerCount -> -> -> 1 `i `l `ul ]
[; ;main.c: 78: if(buzzerCount > 50000) buzzerCount = 0;
"78
[e $ ! > _buzzerCount -> -> 50000 `l `ul 205  ]
[e = _buzzerCount -> -> -> 0 `i `l `ul ]
[e $U 206  ]
"79
[e :U 205 ]
[; ;main.c: 79: else if(buzzerCount > 10000) RB7 = 0;
[e $ ! > _buzzerCount -> -> -> 10000 `i `l `ul 207  ]
[e = _RB7 -> -> 0 `i `b ]
[e $U 208  ]
"80
[e :U 207 ]
[; ;main.c: 80: else if(buzzerCount > 5000) RB7 = 1;
[e $ ! > _buzzerCount -> -> -> 5000 `i `l `ul 209  ]
[e = _RB7 -> -> 1 `i `b ]
[e $U 210  ]
"81
[e :U 209 ]
[; ;main.c: 81: else if(buzzerCount > 2000) RB7 = 0;
[e $ ! > _buzzerCount -> -> -> 2000 `i `l `ul 211  ]
[e = _RB7 -> -> 0 `i `b ]
[e $U 212  ]
"82
[e :U 211 ]
[; ;main.c: 82: else if(buzzerCount > 1000) RB7 = 1;
[e $ ! > _buzzerCount -> -> -> 1000 `i `l `ul 213  ]
[e = _RB7 -> -> 1 `i `b ]
[e :U 213 ]
"84
[e :U 212 ]
[e :U 210 ]
[e :U 208 ]
[e :U 206 ]
[; ;main.c: 84: if(!RA3 && !RA4 && RA5 && !RE0 && !RE1)
[e $ ! && && && && ! _RA3 ! _RA4 _RA5 ! _RE0 ! _RE1 214  ]
[; ;main.c: 85: {
"85
{
[; ;main.c: 86: motor(80, 80);
"86
[e ( _motor (2 , -> -> 80 `i `c -> -> 80 `i `c ]
"87
}
[; ;main.c: 87: }
[e $U 215  ]
"88
[e :U 214 ]
[; ;main.c: 88: else if(!RA3 && RA4 && RA5 && !RE0 && !RE1)
[e $ ! && && && && ! _RA3 _RA4 _RA5 ! _RE0 ! _RE1 216  ]
[; ;main.c: 89: {
"89
{
[; ;main.c: 90: motor(40, 80);
"90
[e ( _motor (2 , -> -> 40 `i `c -> -> 80 `i `c ]
"91
}
[; ;main.c: 91: }
[e $U 217  ]
"92
[e :U 216 ]
[; ;main.c: 92: else if(!RA3 && !RA4 && RA5 && RE0 && !RE1)
[e $ ! && && && && ! _RA3 ! _RA4 _RA5 _RE0 ! _RE1 218  ]
[; ;main.c: 93: {
"93
{
[; ;main.c: 94: motor(80, 40);
"94
[e ( _motor (2 , -> -> 80 `i `c -> -> 40 `i `c ]
"95
}
[; ;main.c: 95: }
[e $U 219  ]
"96
[e :U 218 ]
[; ;main.c: 96: else if(!RA3 && RA4 && !RA5 && !RE0 && !RE1)
[e $ ! && && && && ! _RA3 _RA4 ! _RA5 ! _RE0 ! _RE1 220  ]
[; ;main.c: 97: {
"97
{
[; ;main.c: 98: motor(30, 80);
"98
[e ( _motor (2 , -> -> 30 `i `c -> -> 80 `i `c ]
"99
}
[; ;main.c: 99: }
[e $U 221  ]
"100
[e :U 220 ]
[; ;main.c: 100: else if(!RA3 && !RA4 && !RA5 && RE0 && !RE1)
[e $ ! && && && && ! _RA3 ! _RA4 ! _RA5 _RE0 ! _RE1 222  ]
[; ;main.c: 101: {
"101
{
[; ;main.c: 102: motor(80, 30);
"102
[e ( _motor (2 , -> -> 80 `i `c -> -> 30 `i `c ]
"103
}
[; ;main.c: 103: }
[e $U 223  ]
"104
[e :U 222 ]
[; ;main.c: 104: else if(RA3 && RA4 && !RA5 && !RE0 && !RE1)
[e $ ! && && && && _RA3 _RA4 ! _RA5 ! _RE0 ! _RE1 224  ]
[; ;main.c: 105: {
"105
{
[; ;main.c: 106: motor(10, 80);
"106
[e ( _motor (2 , -> -> 10 `i `c -> -> 80 `i `c ]
"107
}
[; ;main.c: 107: }
[e $U 225  ]
"108
[e :U 224 ]
[; ;main.c: 108: else if(!RA3 && !RA4 && !RA5 && RE0 && RE1)
[e $ ! && && && && ! _RA3 ! _RA4 ! _RA5 _RE0 _RE1 226  ]
[; ;main.c: 109: {
"109
{
[; ;main.c: 110: motor(80, 10);
"110
[e ( _motor (2 , -> -> 80 `i `c -> -> 10 `i `c ]
"111
}
[; ;main.c: 111: }
[e $U 227  ]
"112
[e :U 226 ]
[; ;main.c: 112: else if(RA3 && !RA4 && !RA5 && !RE0 && !RE1)
[e $ ! && && && && _RA3 ! _RA4 ! _RA5 ! _RE0 ! _RE1 228  ]
[; ;main.c: 113: {
"113
{
[; ;main.c: 114: motor(0, 80);
"114
[e ( _motor (2 , -> -> 0 `i `c -> -> 80 `i `c ]
"115
}
[; ;main.c: 115: }
[e $U 229  ]
"116
[e :U 228 ]
[; ;main.c: 116: else if(!RA3 && !RA4 && !RA5 && !RE0 && RE1)
[e $ ! && && && && ! _RA3 ! _RA4 ! _RA5 ! _RE0 _RE1 230  ]
[; ;main.c: 117: {
"117
{
[; ;main.c: 118: motor(80, 0);
"118
[e ( _motor (2 , -> -> 80 `i `c -> -> 0 `i `c ]
"119
}
[e :U 230 ]
"120
[e :U 229 ]
[e :U 227 ]
[e :U 225 ]
[e :U 223 ]
[e :U 221 ]
[e :U 219 ]
[e :U 217 ]
[e :U 215 ]
}
[e :U 202 ]
"75
[e $U 203  ]
[e :U 204 ]
"121
}
[e :U 201 ]
"122
[e :U 200 ]
}
[e :U 196 ]
"54
[e $U 197  ]
[e :U 198 ]
[; ;main.c: 119: }
[; ;main.c: 120: }
[; ;main.c: 121: }
[; ;main.c: 122: }
[; ;main.c: 124: while(1)
"124
[e :U 232 ]
[; ;main.c: 125: {
"125
{
[; ;main.c: 126: if(!RA4 && RA5 && !RE0)
"126
[e $ ! && && ! _RA4 _RA5 ! _RE0 234  ]
[; ;main.c: 127: {
"127
{
[; ;main.c: 128: motor(70, 70);
"128
[e ( _motor (2 , -> -> 70 `i `c -> -> 70 `i `c ]
"129
}
[; ;main.c: 129: }
[e $U 235  ]
"130
[e :U 234 ]
[; ;main.c: 130: else if(RA4 && RA5 && !RE0)
[e $ ! && && _RA4 _RA5 ! _RE0 236  ]
[; ;main.c: 131: {
"131
{
[; ;main.c: 132: motor(40, 70);
"132
[e ( _motor (2 , -> -> 40 `i `c -> -> 70 `i `c ]
"133
}
[; ;main.c: 133: }
[e $U 237  ]
"134
[e :U 236 ]
[; ;main.c: 134: else if(!RA4 && RA5 && RE0)
[e $ ! && && ! _RA4 _RA5 _RE0 238  ]
[; ;main.c: 135: {
"135
{
[; ;main.c: 136: motor(70, 40);
"136
[e ( _motor (2 , -> -> 70 `i `c -> -> 40 `i `c ]
"137
}
[; ;main.c: 137: }
[e $U 239  ]
"138
[e :U 238 ]
[; ;main.c: 138: else if(RA4 && !RA5 && !RE0)
[e $ ! && && _RA4 ! _RA5 ! _RE0 240  ]
[; ;main.c: 139: {
"139
{
[; ;main.c: 140: motor(30, 70);
"140
[e ( _motor (2 , -> -> 30 `i `c -> -> 70 `i `c ]
"141
}
[; ;main.c: 141: }
[e $U 241  ]
"142
[e :U 240 ]
[; ;main.c: 142: else if(!RA4 && !RA5 && RE0)
[e $ ! && && ! _RA4 ! _RA5 _RE0 242  ]
[; ;main.c: 143: {
"143
{
[; ;main.c: 144: motor(70, 30);
"144
[e ( _motor (2 , -> -> 70 `i `c -> -> 30 `i `c ]
"145
}
[e :U 242 ]
"147
[e :U 241 ]
[e :U 239 ]
[e :U 237 ]
[e :U 235 ]
[; ;main.c: 145: }
[; ;main.c: 147: if(RE1 && !RA3)
[e $ ! && _RE1 ! _RA3 243  ]
[; ;main.c: 148: {
"148
{
[; ;main.c: 149: motor(30, 30);
"149
[e ( _motor (2 , -> -> 30 `i `c -> -> 30 `i `c ]
[; ;main.c: 150: for(i = 0; i < 200; i++)
"150
{
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 200 `i `ui 244  ]
[e $U 245  ]
"151
[e :U 244 ]
[; ;main.c: 151: {
{
[; ;main.c: 152: if(RA3) break;
"152
[e $ ! _RA3 247  ]
[e $U 245  ]
[e :U 247 ]
[; ;main.c: 153: _delay((unsigned long)((1)*(8000000/4000.0)));
"153
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"154
}
"150
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 200 `i `ui 244  ]
[e :U 245 ]
"154
}
[; ;main.c: 154: }
[; ;main.c: 155: if(!RA3)
"155
[e $ ! ! _RA3 248  ]
[; ;main.c: 156: {
"156
{
[; ;main.c: 157: motor(0, 0);
"157
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 158: _delay((unsigned long)((200)*(8000000/4000.0)));
"158
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 159: if(!RA5)
"159
[e $ ! ! _RA5 249  ]
[; ;main.c: 160: {
"160
{
[; ;main.c: 161: dir = 'R';
"161
[e = _dir -> -> 82 `ui `uc ]
[; ;main.c: 162: motor(30, -30);
"162
[e ( _motor (2 , -> -> 30 `i `c -> -U -> 30 `i `c ]
[; ;main.c: 163: while(!RE1);
"163
[e $U 250  ]
[e :U 251 ]
[e :U 250 ]
[e $ ! _RE1 251  ]
[e :U 252 ]
[; ;main.c: 165: while(!RE0);
"165
[e $U 253  ]
[e :U 254 ]
[e :U 253 ]
[e $ ! _RE0 254  ]
[e :U 255 ]
[; ;main.c: 166: motor(0, 0);
"166
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 167: _delay((unsigned long)((200)*(8000000/4000.0)));
"167
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"168
}
[; ;main.c: 168: }
[e $U 256  ]
"169
[e :U 249 ]
[; ;main.c: 169: else dir = 'S';
[e = _dir -> -> 83 `ui `uc ]
[e :U 256 ]
"170
}
[e :U 248 ]
"171
}
[e :U 243 ]
[; ;main.c: 170: }
[; ;main.c: 171: }
[; ;main.c: 172: if(RA3)
"172
[e $ ! _RA3 257  ]
[; ;main.c: 173: {
"173
{
[; ;main.c: 174: motor(30, 30);
"174
[e ( _motor (2 , -> -> 30 `i `c -> -> 30 `i `c ]
[; ;main.c: 175: _delay((unsigned long)((200)*(8000000/4000.0)));
"175
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 176: motor(0, 0);
"176
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 177: _delay((unsigned long)((200)*(8000000/4000.0)));
"177
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 178: dir = 'L';
"178
[e = _dir -> -> 76 `ui `uc ]
[; ;main.c: 179: motor(-30, 30);
"179
[e ( _motor (2 , -> -U -> 30 `i `c -> -> 30 `i `c ]
[; ;main.c: 180: while(!RA3);
"180
[e $U 258  ]
[e :U 259 ]
[e :U 258 ]
[e $ ! _RA3 259  ]
[e :U 260 ]
[; ;main.c: 182: while(!RA4);
"182
[e $U 261  ]
[e :U 262 ]
[e :U 261 ]
[e $ ! _RA4 262  ]
[e :U 263 ]
[; ;main.c: 183: motor(0, 0);
"183
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 184: _delay((unsigned long)((200)*(8000000/4000.0)));
"184
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"185
}
[e :U 257 ]
[; ;main.c: 185: }
[; ;main.c: 187: if(!RA3 && !RA4 && !RA5 && !RE0 && !RE1)
"187
[e $ ! && && && && ! _RA3 ! _RA4 ! _RA5 ! _RE0 ! _RE1 264  ]
[; ;main.c: 188: {
"188
{
[; ;main.c: 189: motor(0, 0);
"189
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 190: _delay((unsigned long)((200)*(8000000/4000.0)));
"190
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 191: dir = 'B';
"191
[e = _dir -> -> 66 `ui `uc ]
[; ;main.c: 192: motor(30, -30);
"192
[e ( _motor (2 , -> -> 30 `i `c -> -U -> 30 `i `c ]
[; ;main.c: 193: while(!RE1);
"193
[e $U 265  ]
[e :U 266 ]
[e :U 265 ]
[e $ ! _RE1 266  ]
[e :U 267 ]
[; ;main.c: 195: while(!RE0);
"195
[e $U 268  ]
[e :U 269 ]
[e :U 268 ]
[e $ ! _RE0 269  ]
[e :U 270 ]
[; ;main.c: 196: motor(0, 0);
"196
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 197: _delay((unsigned long)((200)*(8000000/4000.0)));
"197
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"198
}
[e :U 264 ]
[; ;main.c: 198: }
[; ;main.c: 200: if(RA3 && RA4 && RA5 && RE0 && RE1)
"200
[e $ ! && && && && _RA3 _RA4 _RA5 _RE0 _RE1 271  ]
[; ;main.c: 201: {
"201
{
[; ;main.c: 202: motor(0, 0);
"202
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 203: beep(3, 300);
"203
[e ( _beep (2 , -> -> 3 `i `uc -> -> 300 `i `ui ]
[; ;main.c: 204: pathTotal = pathLength;
"204
[e = _pathTotal _pathLength ]
[; ;main.c: 205: lcdGoto(1, 6);
"205
[e ( _lcdGoto (2 , -> -> 1 `i `uc -> -> 6 `i `uc ]
[; ;main.c: 206: lcdNumber(pathTotal, 10, 2);
"206
[e ( _lcdNumber (3 , , -> _pathTotal `ui -> -> 10 `i `uc -> -> 2 `i `uc ]
[; ;main.c: 207: break;
"207
[e $U 233  ]
"208
}
[e :U 271 ]
[; ;main.c: 208: }
[; ;main.c: 210: if(dir)
"210
[e $ ! != -> _dir `i -> -> -> 0 `i `uc `i 272  ]
[; ;main.c: 211: {
"211
{
[; ;main.c: 212: if(dir == 'B')
"212
[e $ ! == -> _dir `ui -> 66 `ui 273  ]
[; ;main.c: 213: {
"213
{
[; ;main.c: 214: simplified = 1;
"214
[e = _simplified -> -> 1 `i `uc ]
[; ;main.c: 215: string[1] = dir;
"215
[e = *U + &U _string * -> -> -> 1 `i `ui `ux -> -> # *U &U _string `ui `ux _dir ]
[; ;main.c: 216: lcdGoto(2, pathLength+1);
"216
[e ( _lcdGoto (2 , -> -> 2 `i `uc -> + -> _pathLength `i -> 1 `i `uc ]
[; ;main.c: 217: lcdWrite(1, dir);
"217
[e ( _lcdWrite (2 , -> -> 1 `i `uc _dir ]
[; ;main.c: 218: string[0] = path[--pathLength];
"218
[e = *U + &U _string * -> -> -> 0 `i `ui `ux -> -> # *U &U _string `ui `ux *U + &U _path * -> =- _pathLength -> -> 1 `i `uc `ux -> -> # *U &U _path `ui `ux ]
[; ;main.c: 219: dir = 0;
"219
[e = _dir -> -> 0 `i `uc ]
"220
}
[; ;main.c: 220: }
[e $U 274  ]
"221
[e :U 273 ]
[; ;main.c: 221: else if(simplified)
[e $ ! != -> _simplified `i -> -> -> 0 `i `uc `i 275  ]
[; ;main.c: 222: {
"222
{
[; ;main.c: 223: string[2] = dir;
"223
[e = *U + &U _string * -> -> -> 2 `i `ui `ux -> -> # *U &U _string `ui `ux _dir ]
[; ;main.c: 225: if(!memcmp("LBL", &string, 3)) path[pathLength] = 'S';
"225
[e $ ! ! != ( _memcmp (3 , , -> :s 8C `*Cv -> &U _string `*Cv -> -> 3 `i `ui -> 0 `i 276  ]
[e = *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux -> -> 83 `ui `uc ]
[e $U 277  ]
"226
[e :U 276 ]
[; ;main.c: 226: else if(!memcmp("LBR", &string, 3)) path[pathLength] = 'B';
[e $ ! ! != ( _memcmp (3 , , -> :s 9C `*Cv -> &U _string `*Cv -> -> 3 `i `ui -> 0 `i 278  ]
[e = *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux -> -> 66 `ui `uc ]
[e $U 279  ]
"227
[e :U 278 ]
[; ;main.c: 227: else if(!memcmp("LBS", &string, 3)) path[pathLength] = 'R';
[e $ ! ! != ( _memcmp (3 , , -> :s 10C `*Cv -> &U _string `*Cv -> -> 3 `i `ui -> 0 `i 280  ]
[e = *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux -> -> 82 `ui `uc ]
[e $U 281  ]
"228
[e :U 280 ]
[; ;main.c: 228: else if(!memcmp("RBL", &string, 3)) path[pathLength] = 'B';
[e $ ! ! != ( _memcmp (3 , , -> :s 11C `*Cv -> &U _string `*Cv -> -> 3 `i `ui -> 0 `i 282  ]
[e = *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux -> -> 66 `ui `uc ]
[e $U 283  ]
"229
[e :U 282 ]
[; ;main.c: 229: else if(!memcmp("SBL", &string, 3)) path[pathLength] = 'R';
[e $ ! ! != ( _memcmp (3 , , -> :s 12C `*Cv -> &U _string `*Cv -> -> 3 `i `ui -> 0 `i 284  ]
[e = *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux -> -> 82 `ui `uc ]
[e $U 285  ]
"230
[e :U 284 ]
[; ;main.c: 230: else if(!memcmp("SBS", &string, 3)) path[pathLength] = 'B';
[e $ ! ! != ( _memcmp (3 , , -> :s 13C `*Cv -> &U _string `*Cv -> -> 3 `i `ui -> 0 `i 286  ]
[e = *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux -> -> 66 `ui `uc ]
[e :U 286 ]
"232
[e :U 285 ]
[e :U 283 ]
[e :U 281 ]
[e :U 279 ]
[e :U 277 ]
[; ;main.c: 232: lcdGoto(2, pathLength+1);
[e ( _lcdGoto (2 , -> -> 2 `i `uc -> + -> _pathLength `i -> 1 `i `uc ]
[; ;main.c: 233: lcdWrite(1, path[pathLength]);
"233
[e ( _lcdWrite (2 , -> -> 1 `i `uc *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux ]
[; ;main.c: 234: lcdGoto(2, pathLength+2);
"234
[e ( _lcdGoto (2 , -> -> 2 `i `uc -> + -> _pathLength `i -> 2 `i `uc ]
[; ;main.c: 235: lcdWrite(1, ' ');
"235
[e ( _lcdWrite (2 , -> -> 1 `i `uc -> -> 32 `ui `uc ]
[; ;main.c: 237: if(path[pathLength] == 'B')
"237
[e $ ! == -> *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux `ui -> 66 `ui 287  ]
[; ;main.c: 238: {
"238
{
[; ;main.c: 239: string[1] = path[pathLength];
"239
[e = *U + &U _string * -> -> -> 1 `i `ui `ux -> -> # *U &U _string `ui `ux *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux ]
[; ;main.c: 240: string[0] = path[--pathLength];
"240
[e = *U + &U _string * -> -> -> 0 `i `ui `ux -> -> # *U &U _string `ui `ux *U + &U _path * -> =- _pathLength -> -> 1 `i `uc `ux -> -> # *U &U _path `ui `ux ]
"241
}
[; ;main.c: 241: }
[e $U 288  ]
"242
[e :U 287 ]
[; ;main.c: 242: else
[; ;main.c: 243: {
"243
{
[; ;main.c: 244: simplified = 0;
"244
[e = _simplified -> -> 0 `i `uc ]
[; ;main.c: 245: pathLength++;
"245
[e ++ _pathLength -> -> 1 `i `uc ]
"246
}
[e :U 288 ]
[; ;main.c: 246: }
[; ;main.c: 247: dir = 0;
"247
[e = _dir -> -> 0 `i `uc ]
"248
}
[; ;main.c: 248: }
[e $U 289  ]
"249
[e :U 275 ]
[; ;main.c: 249: else if(!simplified)
[e $ ! ! != -> _simplified `i -> -> -> 0 `i `uc `i 290  ]
[; ;main.c: 250: {
"250
{
[; ;main.c: 251: path[pathLength] = dir;
"251
[e = *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux _dir ]
[; ;main.c: 252: lcdGoto(2, pathLength+1);
"252
[e ( _lcdGoto (2 , -> -> 2 `i `uc -> + -> _pathLength `i -> 1 `i `uc ]
[; ;main.c: 253: lcdWrite(1, path[pathLength]);
"253
[e ( _lcdWrite (2 , -> -> 1 `i `uc *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux ]
[; ;main.c: 254: pathLength++;
"254
[e ++ _pathLength -> -> 1 `i `uc ]
"255
}
[e :U 290 ]
"256
[e :U 289 ]
[e :U 274 ]
[; ;main.c: 255: }
[; ;main.c: 256: dir = 0;
[e = _dir -> -> 0 `i `uc ]
"257
}
[e :U 272 ]
"258
}
[e :U 231 ]
"124
[e $U 232  ]
[e :U 233 ]
[; ;main.c: 257: }
[; ;main.c: 258: }
[; ;main.c: 260: while(1)
"260
[e :U 292 ]
[; ;main.c: 261: {
"261
{
[; ;main.c: 262: if(!RB0)
"262
[e $ ! ! _RB0 294  ]
[; ;main.c: 263: {
"263
{
[; ;main.c: 264: pathLength = 0;
"264
[e = _pathLength -> -> 0 `i `uc ]
[; ;main.c: 265: beep(2, 50);
"265
[e ( _beep (2 , -> -> 2 `i `uc -> -> 50 `i `ui ]
[; ;main.c: 266: _delay((unsigned long)((1000)*(8000000/4000.0)));
"266
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 267: while(1)
"267
[e :U 296 ]
[; ;main.c: 268: {
"268
{
[; ;main.c: 269: if(!RA4 && RA5 && !RE0)
"269
[e $ ! && && ! _RA4 _RA5 ! _RE0 298  ]
[; ;main.c: 270: {
"270
{
[; ;main.c: 271: motor(70, 70);
"271
[e ( _motor (2 , -> -> 70 `i `c -> -> 70 `i `c ]
"272
}
[; ;main.c: 272: }
[e $U 299  ]
"273
[e :U 298 ]
[; ;main.c: 273: else if(RA4 && RA5 && !RE0)
[e $ ! && && _RA4 _RA5 ! _RE0 300  ]
[; ;main.c: 274: {
"274
{
[; ;main.c: 275: motor(40, 70);
"275
[e ( _motor (2 , -> -> 40 `i `c -> -> 70 `i `c ]
"276
}
[; ;main.c: 276: }
[e $U 301  ]
"277
[e :U 300 ]
[; ;main.c: 277: else if(!RA4 && RA5 && RE0)
[e $ ! && && ! _RA4 _RA5 _RE0 302  ]
[; ;main.c: 278: {
"278
{
[; ;main.c: 279: motor(70, 40);
"279
[e ( _motor (2 , -> -> 70 `i `c -> -> 40 `i `c ]
"280
}
[; ;main.c: 280: }
[e $U 303  ]
"281
[e :U 302 ]
[; ;main.c: 281: else if(RA4 && !RA5 && !RE0)
[e $ ! && && _RA4 ! _RA5 ! _RE0 304  ]
[; ;main.c: 282: {
"282
{
[; ;main.c: 283: motor(30, 70);
"283
[e ( _motor (2 , -> -> 30 `i `c -> -> 70 `i `c ]
"284
}
[; ;main.c: 284: }
[e $U 305  ]
"285
[e :U 304 ]
[; ;main.c: 285: else if(!RA4 && !RA5 && RE0)
[e $ ! && && ! _RA4 ! _RA5 _RE0 306  ]
[; ;main.c: 286: {
"286
{
[; ;main.c: 287: motor(70, 30);
"287
[e ( _motor (2 , -> -> 70 `i `c -> -> 30 `i `c ]
"288
}
[e :U 306 ]
"290
[e :U 305 ]
[e :U 303 ]
[e :U 301 ]
[e :U 299 ]
[; ;main.c: 288: }
[; ;main.c: 290: if(pathLength < pathTotal)
[e $ ! < -> _pathLength `i -> _pathTotal `i 307  ]
[; ;main.c: 291: {
"291
{
[; ;main.c: 292: if(RA3 || RE1)
"292
[e $ ! || _RA3 _RE1 308  ]
[; ;main.c: 293: {
"293
{
[; ;main.c: 294: if(path[pathLength] == 'L')
"294
[e $ ! == -> *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux `ui -> 76 `ui 309  ]
[; ;main.c: 295: {
"295
{
[; ;main.c: 296: motor(30, 30);
"296
[e ( _motor (2 , -> -> 30 `i `c -> -> 30 `i `c ]
[; ;main.c: 297: _delay((unsigned long)((200)*(8000000/4000.0)));
"297
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 298: motor(0, 0);
"298
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 299: _delay((unsigned long)((200)*(8000000/4000.0)));
"299
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 300: motor(-30, 30);
"300
[e ( _motor (2 , -> -U -> 30 `i `c -> -> 30 `i `c ]
[; ;main.c: 301: while(!RA3);
"301
[e $U 310  ]
[e :U 311 ]
[e :U 310 ]
[e $ ! _RA3 311  ]
[e :U 312 ]
[; ;main.c: 303: while(!RA4);
"303
[e $U 313  ]
[e :U 314 ]
[e :U 313 ]
[e $ ! _RA4 314  ]
[e :U 315 ]
[; ;main.c: 304: motor(0, 0);
"304
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 305: _delay((unsigned long)((200)*(8000000/4000.0)));
"305
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"306
}
[; ;main.c: 306: }
[e $U 316  ]
"307
[e :U 309 ]
[; ;main.c: 307: else if(path[pathLength] == 'R')
[e $ ! == -> *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux `ui -> 82 `ui 317  ]
[; ;main.c: 308: {
"308
{
[; ;main.c: 309: motor(30, 30);
"309
[e ( _motor (2 , -> -> 30 `i `c -> -> 30 `i `c ]
[; ;main.c: 310: _delay((unsigned long)((200)*(8000000/4000.0)));
"310
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 311: motor(0, 0);
"311
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 312: _delay((unsigned long)((200)*(8000000/4000.0)));
"312
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 313: motor(30, -30);
"313
[e ( _motor (2 , -> -> 30 `i `c -> -U -> 30 `i `c ]
[; ;main.c: 314: while(!RE1);
"314
[e $U 318  ]
[e :U 319 ]
[e :U 318 ]
[e $ ! _RE1 319  ]
[e :U 320 ]
[; ;main.c: 316: while(!RE0);
"316
[e $U 321  ]
[e :U 322 ]
[e :U 321 ]
[e $ ! _RE0 322  ]
[e :U 323 ]
[; ;main.c: 317: motor(0, 0);
"317
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 318: _delay((unsigned long)((200)*(8000000/4000.0)));
"318
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"319
}
[; ;main.c: 319: }
[e $U 324  ]
"320
[e :U 317 ]
[; ;main.c: 320: else if(path[pathLength] == 'S')
[e $ ! == -> *U + &U _path * -> _pathLength `ux -> -> # *U &U _path `ui `ux `ui -> 83 `ui 325  ]
[; ;main.c: 321: {
"321
{
[; ;main.c: 322: motor(30, 30);
"322
[e ( _motor (2 , -> -> 30 `i `c -> -> 30 `i `c ]
[; ;main.c: 323: while(RA3 || RE1);
"323
[e $U 326  ]
[e :U 327 ]
[e :U 326 ]
[e $ || _RA3 _RE1 327  ]
[e :U 328 ]
"324
}
[e :U 325 ]
"325
[e :U 324 ]
[e :U 316 ]
[; ;main.c: 324: }
[; ;main.c: 325: pathLength++;
[e ++ _pathLength -> -> 1 `i `uc ]
"326
}
[e :U 308 ]
"327
}
[e :U 307 ]
[; ;main.c: 326: }
[; ;main.c: 327: }
[; ;main.c: 329: if(RA3 && RA4 && RA5 && RE0 && RE1)
"329
[e $ ! && && && && _RA3 _RA4 _RA5 _RE0 _RE1 329  ]
[; ;main.c: 330: {
"330
{
[; ;main.c: 331: motor(0, 0);
"331
[e ( _motor (2 , -> -> 0 `i `c -> -> 0 `i `c ]
[; ;main.c: 332: beep(10, 50);
"332
[e ( _beep (2 , -> -> 10 `i `uc -> -> 50 `i `ui ]
[; ;main.c: 333: break;
"333
[e $U 297  ]
"334
}
[e :U 329 ]
"335
}
[e :U 295 ]
"267
[e $U 296  ]
[e :U 297 ]
"336
}
[e :U 294 ]
"337
}
[e :U 291 ]
"260
[e $U 292  ]
[e :U 293 ]
[; ;main.c: 334: }
[; ;main.c: 335: }
[; ;main.c: 336: }
[; ;main.c: 337: }
[; ;main.c: 338: }
"338
[e :UE 195 ]
}
"341
[v _picInit `(v ~T0 @X0 1 ef ]
"342
{
[; ;main.c: 341: void picInit(void)
[; ;main.c: 342: {
[e :U _picInit ]
[f ]
[; ;main.c: 343: IRCF2 = 1;
"343
[e = _IRCF2 -> -> 1 `i `b ]
[; ;main.c: 344: IRCF1 = 1;
"344
[e = _IRCF1 -> -> 1 `i `b ]
[; ;main.c: 345: IRCF0 = 1;
"345
[e = _IRCF0 -> -> 1 `i `b ]
[; ;main.c: 347: ANSEL = 0;
"347
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main.c: 348: ANSELH = 0;
"348
[e = _ANSELH -> -> 0 `i `uc ]
[; ;main.c: 350: PORTA = 0;
"350
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 351: PORTB = 0;
"351
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 352: PORTC = 0;
"352
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 353: PORTD = 0;
"353
[e = _PORTD -> -> 0 `i `uc ]
[; ;main.c: 354: PORTE = 0;
"354
[e = _PORTE -> -> 0 `i `uc ]
[; ;main.c: 356: TRISA = 0b00111000;
"356
[e = _TRISA -> -> 56 `i `uc ]
[; ;main.c: 357: TRISB = 0b00000011;
"357
[e = _TRISB -> -> 3 `i `uc ]
[; ;main.c: 358: TRISC = 0b10000000;
"358
[e = _TRISC -> -> 128 `i `uc ]
[; ;main.c: 359: TRISD = 0b00000000;
"359
[e = _TRISD -> -> 0 `i `uc ]
[; ;main.c: 360: TRISE = 0b011;
"360
[e = _TRISE -> -> 3 `i `uc ]
[; ;main.c: 361: }
"361
[e :UE 330 ]
}
"363
[v _beep `(v ~T0 @X0 1 ef2`uc`ui ]
"364
{
[; ;main.c: 363: void beep(uChar times, uInt delayMs)
[; ;main.c: 364: {
[e :U _beep ]
"363
[v _times `uc ~T0 @X0 1 r1 ]
[v _delayMs `ui ~T0 @X0 1 r2 ]
"364
[f ]
"365
[v _loop `ui ~T0 @X0 1 a ]
[; ;main.c: 365: uInt loop;
[; ;main.c: 366: for(; times > 0; times--)
"366
{
[e $ > -> _times `i -> 0 `i 332  ]
[e $U 333  ]
"367
[e :U 332 ]
[; ;main.c: 367: {
{
[; ;main.c: 368: RB7 = 1;
"368
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 369: for(loop = 0; loop < delayMs; loop++) _delay((unsigned long)((1)*(8000000/4000.0)));
"369
{
[e = _loop -> -> 0 `i `ui ]
[e $U 338  ]
[e :U 335 ]
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[e ++ _loop -> -> 1 `i `ui ]
[e :U 338 ]
[e $ < _loop _delayMs 335  ]
[e :U 336 ]
}
[; ;main.c: 370: RB7 = 0;
"370
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 371: for(loop = 0; loop < delayMs; loop++) _delay((unsigned long)((1)*(8000000/4000.0)));
"371
{
[e = _loop -> -> 0 `i `ui ]
[e $U 342  ]
[e :U 339 ]
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[e ++ _loop -> -> 1 `i `ui ]
[e :U 342 ]
[e $ < _loop _delayMs 339  ]
[e :U 340 ]
}
"372
}
"366
[e -- _times -> -> 1 `i `uc ]
[e $ > -> _times `i -> 0 `i 332  ]
[e :U 333 ]
"372
}
[; ;main.c: 372: }
[; ;main.c: 373: }
"373
[e :UE 331 ]
}
"375
[v _motor `(v ~T0 @X0 1 ef2`c`c ]
"376
{
[; ;main.c: 375: void motor(sChar speedLM, sChar speedRM)
[; ;main.c: 376: {
[e :U _motor ]
"375
[v _speedLM `c ~T0 @X0 1 r1 ]
[v _speedRM `c ~T0 @X0 1 r2 ]
"376
[f ]
"377
[v _speed `uc ~T0 @X0 1 a ]
[v _maxSpeed `uc ~T0 @X0 1 a ]
[; ;main.c: 377: uChar speed, maxSpeed = 80;
[e = _maxSpeed -> -> 80 `i `uc ]
[; ;main.c: 379: if(speedLM < 0)
"379
[e $ ! < -> _speedLM `i -> 0 `i 344  ]
[; ;main.c: 380: {
"380
{
[; ;main.c: 381: RB4 = 1;
"381
[e = _RB4 -> -> 1 `i `b ]
[; ;main.c: 382: RB5 = 0;
"382
[e = _RB5 -> -> 0 `i `b ]
[; ;main.c: 383: speed = (-1) * speedLM;
"383
[e = _speed -> * -U -> 1 `i -> _speedLM `i `uc ]
"384
}
[; ;main.c: 384: }
[e $U 345  ]
"385
[e :U 344 ]
[; ;main.c: 385: else if(speedLM > 0)
[e $ ! > -> _speedLM `i -> 0 `i 346  ]
[; ;main.c: 386: {
"386
{
[; ;main.c: 387: RB4 = 0;
"387
[e = _RB4 -> -> 0 `i `b ]
[; ;main.c: 388: RB5 = 1;
"388
[e = _RB5 -> -> 1 `i `b ]
[; ;main.c: 389: speed = speedLM;
"389
[e = _speed -> _speedLM `uc ]
"390
}
[; ;main.c: 390: }
[e $U 347  ]
"391
[e :U 346 ]
[; ;main.c: 391: else if(!speedLM)
[e $ ! ! != -> _speedLM `i -> -> -> 0 `i `c `i 348  ]
[; ;main.c: 392: {
"392
{
[; ;main.c: 393: RB4 = 0;
"393
[e = _RB4 -> -> 0 `i `b ]
[; ;main.c: 394: RB5 = 0;
"394
[e = _RB5 -> -> 0 `i `b ]
[; ;main.c: 395: speed = speedLM;
"395
[e = _speed -> _speedLM `uc ]
"396
}
[e :U 348 ]
"397
[e :U 347 ]
[e :U 345 ]
[; ;main.c: 396: }
[; ;main.c: 397: if(speed > maxSpeed) speed = maxSpeed;
[e $ ! > -> _speed `i -> _maxSpeed `i 349  ]
[e = _speed _maxSpeed ]
[e :U 349 ]
[; ;main.c: 398: setPwmRC1(1000, speed);
"398
[e ( _setPwmRC1 (2 , -> 1000 `i -> _speed `i ]
[; ;main.c: 400: if(speedRM < 0)
"400
[e $ ! < -> _speedRM `i -> 0 `i 350  ]
[; ;main.c: 401: {
"401
{
[; ;main.c: 402: RB2 = 1;
"402
[e = _RB2 -> -> 1 `i `b ]
[; ;main.c: 403: RB3 = 0;
"403
[e = _RB3 -> -> 0 `i `b ]
[; ;main.c: 404: speed = (-1) * speedRM;
"404
[e = _speed -> * -U -> 1 `i -> _speedRM `i `uc ]
"405
}
[; ;main.c: 405: }
[e $U 351  ]
"406
[e :U 350 ]
[; ;main.c: 406: else if(speedRM > 0)
[e $ ! > -> _speedRM `i -> 0 `i 352  ]
[; ;main.c: 407: {
"407
{
[; ;main.c: 408: RB2 = 0;
"408
[e = _RB2 -> -> 0 `i `b ]
[; ;main.c: 409: RB3 = 1;
"409
[e = _RB3 -> -> 1 `i `b ]
[; ;main.c: 410: speed = speedRM;
"410
[e = _speed -> _speedRM `uc ]
"411
}
[; ;main.c: 411: }
[e $U 353  ]
"412
[e :U 352 ]
[; ;main.c: 412: else if(!speedRM)
[e $ ! ! != -> _speedRM `i -> -> -> 0 `i `c `i 354  ]
[; ;main.c: 413: {
"413
{
[; ;main.c: 414: RB2 = 0;
"414
[e = _RB2 -> -> 0 `i `b ]
[; ;main.c: 415: RB3 = 0;
"415
[e = _RB3 -> -> 0 `i `b ]
[; ;main.c: 416: speed = speedRM;
"416
[e = _speed -> _speedRM `uc ]
"417
}
[e :U 354 ]
"418
[e :U 353 ]
[e :U 351 ]
[; ;main.c: 417: }
[; ;main.c: 418: if(speed > maxSpeed) speed = maxSpeed;
[e $ ! > -> _speed `i -> _maxSpeed `i 355  ]
[e = _speed _maxSpeed ]
[e :U 355 ]
[; ;main.c: 419: setPwmRC2(1000, speed);
"419
[e ( _setPwmRC2 (2 , -> 1000 `i -> _speed `i ]
[; ;main.c: 420: }
"420
[e :UE 343 ]
}
[a 7C 70 111 108 108 111 119 101 114 0 ]
[a 1C 83 87 49 58 77 97 122 101 0 ]
[a 2C 83 87 50 58 76 105 110 101 0 ]
[a 13C 83 66 83 0 ]
[a 10C 76 66 83 0 ]
[a 9C 76 66 82 0 ]
[a 12C 83 66 76 0 ]
[a 11C 82 66 76 0 ]
[a 8C 76 66 76 0 ]
[a 4C 83 111 108 118 105 110 103 46 0 ]
[a 3C 32 32 77 97 122 101 32 32 0 ]
[a 5C 80 97 116 104 58 32 32 32 0 ]
[a 6C 76 105 110 101 32 32 32 32 0 ]
